//-----------------------------------------------------------------------------
// Craftsman & Marksman: Life is feudal
//-----------------------------------------------------------------------------

function createMessageWindowSettings()
{
	%gui = new GuiControl(MessageSettingsDialog)
	{
		position = "0 0";
		extent = "800 600";
		minExtent = "8 8";
		horizSizing = "width";
		vertSizing = "height";
		profile = "GuiOverlayProfile";
		visible = "1";
		active = "1";
		opacity = "1";
		isContainer = "1";
		canSave = "1";
		canSaveDynamicFields = "1";
		helpTag = "0";

			new GuiWindowCtrl() {
			text = GetMessageIDText(2181); //Message Settings
			resizeWidth = "0";
			resizeHeight = "0";
			canMove = "1";
			canClose = "1";
			canMinimize = "0";
			canMaximize = "0";
			canLock = "0";
			canSetup = "0";
			canCollapse = "0";
			closeCommand = "Canvas.popDialog(MessageSettingsDialog); MessageSettingsDialog.safeDeleteObject();";
			edgeSnap = "1";
			margin = "0 0 0 0";
			padding = "0 0 0 0";
			anchorTop = "1";
			anchorBottom = "0";
			anchorLeft = "1";
			anchorRight = "0";
			position = "300 300";
			extent = "417 407";
			minExtent = "8 2";
			horizSizing = "center";
			vertSizing = "center";
			profile = "GuiWindowProfile";
			visible = "1";
			active = "1";
			opacity = "1";
			isContainer = "1";
			canSave = "1";
			canSaveDynamicFields = "1";
			accelerator = "escape";

			new GuiContainer()
			{
				position = "0 0";
				extent = "445 228";
				profile = GuiAtlas3TiledImageProfile;
				visible = "1";
				active = "1";
				canHit = "1";
				BackgroundIndex = LearningWindowBackground;
				docking = Client;

				//Opacity
				new GuiTextCtrl() {
					text = GetMessageIDText(1291)@":"; // Opacity
					position = "39 23";
					extent = "250 24";
					profile = "GuiTextSettingsProfile";
					visible = "1";
					active = "1";
					opacity = "1";
					isContainer = "1";
					canSave = "1";
					canSaveDynamicFields = "0";
				};

				new CmGuiArrowSliderCtrl(MessageSettingsOpacity)
				{
					range = "0 100";
					ticks = "0";
					snap = "0";
					value = "0";
					position = "39 47";
					extent = "236 36";
					profile = "GuiHorizSliderProfile";
					useMouseWheel = "1";
					trackVOffset = "8";
					thumbOffset = "0 0";
					altCommand = "MessageSettingsOpacity.UpdateValue();";
				};

				new GuiControl()
				{
					position = "282 45";
					extent = "83 36";
					profile = "GuiAtlas3TiledImageProfile";
					leftIndex0 = "SmallHexagonalTextFieldLeft";
					backgroundIndex = "SmallHexagonalTextFieldCenter";
					rightIndex0 = "SmallHexagonalTextFieldRight";
	
					new GuiTextEditSliderCtrl(MessageSettingsOpacityText)
					{
						format = "%d";
						range = "0 100";
						renderArrow = "false";
						increment = "1";
						focusOnMouseWheel = "0";
						historySize = "0";
						tabComplete = "0";
						sinkAllKeyEvents = "0";
						text = "0";
						maxLength = "1024";
						position = "10 0";
						extent = "60 35";
						minExtent = "8 2";
						profile = "GuiTextEditSettingsBarProfile";
						command = "MessageSettingsOpacityText.UpdateText();";
					};
				};


				// Message count
				new GuiTextCtrl() {
					text = GetMessageIDText(2182); //Message Count
					position = "39 95";
					extent = "250 24";
					profile = "GuiTextSettingsProfile";
				};

				new CmGuiArrowSliderCtrl(MessageCountSlider)
				{
					range = "0 100";
					ticks = "0";
					snap = "0";
					value = "0";
					position = "39 119";
					extent = "236 36";
					profile = "GuiHorizSliderProfile";
					useMouseWheel = "1";
					trackVOffset = "8";
					thumbOffset = "0 0";
					altCommand = "MessageCountSlider.UpdateValue();";
				};

				new GuiControl()
				{
					position = "282 117";
					extent = "83 36";
					profile = "GuiAtlas3TiledImageProfile";
					leftIndex0 = "SmallHexagonalTextFieldLeft";
					backgroundIndex = "SmallHexagonalTextFieldCenter";
					rightIndex0 = "SmallHexagonalTextFieldRight";
	
					new GuiTextEditSliderCtrl(MessageCountText)
					{
						format = "%d";
						range = "0 100";
						renderArrow = "false";
						increment = "1";
						focusOnMouseWheel = "0";
						historySize = "0";
						tabComplete = "0";
						sinkAllKeyEvents = "0";
						text = "0";
						maxLength = "1024";
						position = "10 0";
						extent = "60 35";
						minExtent = "8 2";
						profile = "GuiTextEditSettingsBarProfile";
						command = "MessageCountText.UpdateText();";
					};
				};
	
				// Message timeout
				new GuiTextCtrl() {
					text = GetMessageIDText(2183);// Message Timeout
					position = "39 167";
					extent = "250 24";
					profile = "GuiTextSettingsProfile";
				};

				new CmGuiArrowSliderCtrl(MessageTimeoutSlider)
				{
					range = "0 100";
					ticks = "0";
					snap = "0";
					value = "0";
					position = "39 191";
					extent = "236 36";
					profile = "GuiHorizSliderProfile";
					useMouseWheel = "1";
					trackVOffset = "8";
					thumbOffset = "0 0";
					altCommand = "MessageTimeoutSlider.UpdateValue();";
				};

				new GuiControl()
				{
					position = "282 189";
					extent = "83 36";
					profile = "GuiAtlas3TiledImageProfile";
					leftIndex0 = "SmallHexagonalTextFieldLeft";
					backgroundIndex = "SmallHexagonalTextFieldCenter";
					rightIndex0 = "SmallHexagonalTextFieldRight";
	
					new GuiTextEditSliderCtrl(MessageTimeoutText)
					{
						format = "%d";
						range = "0 100";
						renderArrow = "false";
						increment = "1";
						focusOnMouseWheel = "0";
						historySize = "0";
						tabComplete = "0";
						sinkAllKeyEvents = "0";
						text = "0";
						maxLength = "1024";
						position = "10 0";
						extent = "60 35";
						minExtent = "8 2";
						profile = "GuiTextEditSettingsBarProfile";
						command = "MessageTimeoutText.UpdateText();";
					};
				};

				new guiHorzTilingButtonCtrl()
				{
					text = GetMessageIDText(1218); // OK
					Profile = "MessageBoxButtonProfile";
					HorizSizing = "center";
					VertSizing = "top";
					position = "0 155";
					Extent = "158 44";
					imageIndex = H44Btn;
					command = "Canvas.popDialog(MessageSettingsDialog); MessageSettingsDialog.safeDeleteObject();";
				};
			};
		};
	};
}
//------------------------------------------------------------------------

function StackMessageWindow::onSettings(%obj)
{
	if(!isObject(MessageSettingsDialog))
	{
		createMessageWindowSettings();
	}

	MessageSettingsDialog.updateWindowSettings(%obj);
	Canvas.pushDialog(MessageSettingsDialog);
}
//------------------------------------------------------------------------

function MessageSettingsDialog::updateWindowSettings(%obj, %window)
{
	$Window = %window;
	MessageSettingsOpacity.value = $Window.opacity * 100;
	MessageSettingsOpacityText.text = mFloor(MessageSettingsOpacity.value);

	MessageCountSlider.value = $Window.getMsgCount();
	MessageCountText.setText(mFloor(MessageCountSlider.value));

	MessageTimeoutSlider.value = $Window.getMsgTimeOut() / 1000;
	MessageTimeoutText.setText(mFloor(MessageTimeoutSlider.value));
}
//------------------------------------------------------------------------

function MessageSettingsOpacityText::UpdateText()
{
	MessageSettingsOpacity.value = MessageSettingsOpacityText.getText();
	MessageSettingsOpacityText.setText(mFloor(MessageSettingsOpacity.value));
	$Window.opacity = MessageSettingsOpacity.value * 0.01; 
}
//------------------------------------------------------------------------

function MessageSettingsOpacity::UpdateValue()
{
	MessageSettingsOpacityText.setText(mFloor(MessageSettingsOpacity.value));
	$Window.opacity = MessageSettingsOpacity.value * 0.01; 
}
//------------------------------------------------------------------------

function MessageSettingsOpacityText::UpdateText()
{
	MessageCountSlider.value = MessageCountText.getText();
	MessageCountText.setText(mFloor(MessageCountSlider.value));
	$Window.setMsgCount(MessageCountSlider.value);
}
//------------------------------------------------------------------------

function MessageCountSlider::UpdateValue()
{
	MessageCountText.setText(mFloor(MessageCountSlider.value));
	$Window.setMsgCount(MessageCountSlider.value);
}
//------------------------------------------------------------------------

function MessageTimeoutText::UpdateText()
{
	MessageTimeoutSlider.value = MessageTimeoutText.getText();
	MessageTimeoutText.setText(mFloor(MessageTimeoutSlider.value));
	$Window.setMsgTimeOut(MessageTimeoutSlider.value * 1000);
}
//------------------------------------------------------------------------

function MessageTimeoutSlider::UpdateValue()
{
	MessageTimeoutText.setText(mFloor(MessageTimeoutSlider.value));
	$Window.setMsgTimeOut(MessageTimeoutSlider.value * 1000);
}
//------------------------------------------------------------------------
