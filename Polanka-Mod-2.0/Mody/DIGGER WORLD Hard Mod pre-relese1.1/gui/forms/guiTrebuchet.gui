//-----------------------------------------------------------------------------
// Craftsman & Marksman: Life is feudal
//-----------------------------------------------------------------------------
$GuiTrebuchet::workBounds = "49 128 330 510";
//-----------------------------------------------------------------------------
function createTrebuchetWindow()
{
	%trebuchet_window = new GuiTrebuchet(TrebuchetWindow)
	{
		position = "10 5";
		extent = "814 714";
		resizeWidth = "0";
		resizeHeight = "0";
		canMove = "1";
		canClose = "1";
		canMaximize = "0";
		canMinimize = "0";
		canHideOnFreelook = "0";
		canLock = "0";
		canSetup = "0";
		locked = "0";
		profile = "GuiInventoryContainerProfile";
		visible = "1";
		active = "1";
		isContainer = "1";
		closeCommand ="TrebuchetWindow.onCloseButtonClick();";
		text = %TrebuchetWindow;

		// background
		new GuiContainer()
		{
			position = "0 0";
			minExtent = "48 92";
			profile = GuiAtlas3TiledImageProfile;
			visible = "1";
			active = "1";
			canHit = "0";
			BackgroundIndex = LearningWindowBackground;
			docking = Client;
		};

		// ammo label
		new GuiTextCtrl()
		{
			text = GetMessageIDText(869);
			//position = $GuiTrebuchet::workBounds.x @ " 29";
			position = "50 53";
			extent = $GuiTrebuchet::workBounds.z @ " 69";
			profile = "TrebuchetWindowLabelTextProfile";
			canHit = "false"; 
			visible = "1";
		};
		
		// area for dropped items
		new GuiBorderContainerCtrl()
		{
			position = $GuiTrebuchet::workBounds.x @ " " @ $GuiTrebuchet::workBounds.y;
			extent = $GuiTrebuchet::workBounds.z @ " " @ $GuiTrebuchet::workBounds.w;
			minExtent = "8 2";
			horizSizing = "right";
			vertSizing = "bottom";
			//profile = "TrebuchetWindowWorkAreaProfile";
			visible = "1";
			active = "1";
			canHit = "0";
		};

		new GuiBitmapCtrl()
		{
			position = "49 123";
			extent = "335 510";
			minExtent = "8 2";			
			visible = "1";
			active = "1";
			canHit = "0";
			internalName = "playerAcceptedArea";			
			bitmap = "gui/images/trebuchet/trebuchet_container.png";
			profile = "GuiBaseTextProfile";
		};


		// angle label
		new GuiTextCtrl()
		{
			text = GetMessageIDText(870);
			position = "445 53";
			extent = "329 69";
			profile = "TrebuchetWindowLabelTextProfile";
			canHit = "false"; 
			visible = "1";
		};
		
		// attack angle slider
		new GuiControl()
		{
			position = "360 100";
			extent = "500 397";
			minExtent = "8 2";
			profile = "GuiDefaultProfile1";
			visible = "1";
			active = "1";
			canHit = "1";
			isContainer = "1";
			
			// background
			new GuiBitmapCtrl()
			{
				position = "0 0";
				extent = "401 382";
				//profile = "TrebuchetWindowImageProfile";
				visible = "1";
				active = "1";
				canHit = "false"; 
				//imageIndex = getTrebuchetAngleAttackBackground();
				imageIndex = "TrebuchetAngleAttackBackground";
				profile = "GuiAtlas3ImageProfile";
				centered = "1";
			};
			
			new GuiTrebuchetRope()
			{
				position = "59 0";
				extent = "260 370";//"302 370";
				minExtent = "8 2";
				profile = "GuiDefaultProfile";
				visible = "1";
				active = "1";
				canHit = "0";
				isContainer = "1";
				bitmap = "gui/images/trebuchet/rope.png";
				internalName = "trebuchetRope";
			};
			
			// roller
			new GuiBitmapCtrl()
			{
				position = "32 343";
				extent = "54 54";
				profile = "TrebuchetWindowImageProfile";
				visible = "1";
				active = "1";
				canHit = "false"; 
				imageIndex = "TrebuchetAngleAttackRotationCenter";
				centered = "1";
				profile = "GuiAtlas3ImageProfile";
			};
			
			new GuiTextCtrl()
			{
				text = "";
				position = "370 0";
				extent = "45 15";
				profile = "TrebuchetWindowAngleTextProfile";
				canHit = "false"; 
				visible = "1";
				internalName = "angleTextCtrl";
			};
			
			new GuiTrebuchetAttackAngleSlider(AttackSlider)
			{
				position = "315 0";
				extent = "46 382";
				minExtent = "8 2";
				profile = "GuiDefaultProfile";
				visible = "1";
				active = "1";
				canHit = "1";
				isContainer = "1";
				
				new GuiBitmapCtrl()
				{
					position = "0 0";
					extent = "46 79";
					//profile = "TrebuchetWindowImageProfile";
					visible = "1";
					active = "1";
					canHit = "false"; 
					//imageIndex = getTrebuchetAngleAttackSlider();
					centered = "1";
					internalName = "sliderCtrl";
					profile = "GuiAtlas3ImageProfile";
					imageIndex = "TrebuchetAngleAttackSlider";
				};
			};
		};
		
		new GuiTextCtrl()
		{
			text = GetMessageIDText(872);
			position = "363 495";
			extent = "210 93";
			profile = "TrebuchetWindowLabelRightTextProfile";
			canHit = "false"; 
			visible = "0";
		};
		
		// fire button
		new GuiButtonCtrl()
		{
			position = "630 520";
			extent = "122 122";
			buttonType = "push";
			profile = "TrebuchetWindowImageProfile";
			visible = "1";
			active = "1";
			bitmapMode = "Centered";
			//imageIndex = getTrebuchetFireButton();
			imageIndex = "BtnTrebuchetFire";
			command = "TrebuchetWindow.onFireButtonClick();";
			internalName = "trebuchetFireBtn";
			horizSizing = "right";
            vertSizing = "top";
		}; 
		

		// rotate background
		// rotate button
		// rotate button
		new GuiBitmapCtrl()
		{
			position = "411 533";
			extent = "194 85";
			buttonType = "push";
			//profile = "TrebuchetWindowRotateButtonProfile";
			visible = "1";
			active = "1";
			command = "TrebuchetWindow.onRotateButtonClick();"; 
			internalName = "trebuchetRotateBtn";
			imageIndex = "BuildBtnRotationBackground";
			profile = "GuiAtlas3ImageProfile";
						
			new GuiBitmapCtrl()
			{
				position = "0 0";
				extent = "194 85";
				//profile = "TrebuchetWindowImageProfile";
				visible = "1";
				active = "1";
				canHit = "false"; 
				centered = "1";
				internalName = "buttonIcon";
				imageIndex = "BuildBtnRotation";
				profile = "GuiAtlas3ImageProfile";
			
			};
		};

		
		
		// no use	
		new GuiTextCtrl()
		{
				text = GetMessageIDText(871);
				position = "0 0";
				extent = "166 93";
				profile = "TrebuchetWindowLabelTextProfile";
				canHit = "false"; 
				visible = "0";
		};
			
		
	};
	
	PlayGui.add(TrebuchetWindow);
}
//-----------------------------------------------------------------------------
/*
function createTrebuchetWindowProfiles()
{
}
//-----------------------------------------------------------------------------
function deleteTrebuchetWindowProfiles()
{
}
*/
//-----------------------------------------------------------------------------
function TrebuchetWindow::onTrebuchetStateChange(%this, %bActive)
{
	if (!isObject(TrebuchetWindow))
		return;
		
	TrebuchetWindow-->trebuchetFireBtn.depressed = !%bActive;
	TrebuchetWindow-->trebuchetFireBtn.canHit = %bActive;
	TrebuchetWindow-->trebuchetRotateBtn.active = %bActive;
}
//-----------------------------------------------------------------------------
function AttackSlider::onMouseDown(%this, %mousePos)
{
	AttackSlider.updateThumbValue(%mousePos);
	AttackSlider.updateThumbPosition();
}
//-----------------------------------------------------------------------------
function AttackSlider::onMouseUp(%this, %mousePos)
{
	AttackSlider.updateThumbValue(%mousePos);
	%round = ( (100 * AttackSlider.angle) % (100 * AttackSlider.incAmount) ) / 100;
	if (%round > 0.5 * AttackSlider.incAmount) %round -= AttackSlider.incAmount;
	%angle = AttackSlider.angle - %round;
	%angle = mClamp(%angle, AttackSlider.range.x, AttackSlider.range.y);
	AttackSlider.angle = %angle;
	AttackSlider.updateThumbPosition();
}
//-----------------------------------------------------------------------------
function AttackSlider::onMouseDragged(%this, %mousePos)
{
	AttackSlider.updateThumbValue(%mousePos);
	AttackSlider.updateThumbPosition();
}
//-----------------------------------------------------------------------------
function AttackSlider::onMouseWheelUp(%this, %mousePos)
{
	AttackSlider.angle = mClamp(AttackSlider.angle + AttackSlider.incAmount, AttackSlider.range.x, AttackSlider.range.y);
	AttackSlider.updateThumbPosition();
}
//-----------------------------------------------------------------------------
function AttackSlider::onMouseWheelDown(%this, %mousePos)
{
	AttackSlider.angle = mClamp(AttackSlider.angle - AttackSlider.incAmount, AttackSlider.range.x, AttackSlider.range.y);
	AttackSlider.updateThumbPosition();
}
//-----------------------------------------------------------------------------
function AttackSlider::updateThumbValue(%this, %mousePos)
{
	%currMousePos = %mousePos.y - AttackSlider-->sliderCtrl.extent.y / 2;
	%maxValueHeight = AttackSlider.extent.y - AttackSlider-->sliderCtrl.extent.y;
	%angle = 1.0 - (%currMousePos / %maxValueHeight);
	%angle = %angle * (AttackSlider.range.y - AttackSlider.range.x) + AttackSlider.range.x;
	%angle = mClamp(%angle, AttackSlider.range.x, AttackSlider.range.y);
	AttackSlider.angle = %angle;
}
//-----------------------------------------------------------------------------
function AttackSlider::updateThumbPosition(%this)
{
	%maxValueHeight = AttackSlider.extent.y - AttackSlider-->sliderCtrl.extent.y;
	%valueHeight = (%maxValueHeight *((AttackSlider.angle -AttackSlider.range.x) /(AttackSlider.range.y - AttackSlider.range.x)));
	AttackSlider-->sliderCtrl.position.y = %maxValueHeight - %valueHeight;
	updateTrebuchetRopeAngle();
	TrebuchetWindow-->angleTextCtrl.text = strformat("%.1f", AttackSlider.angle);
	TrebuchetWindow-->angleTextCtrl.position.y = AttackSlider-->sliderCtrl.position.y + AttackSlider-->sliderCtrl.extent.y / 2 - TrebuchetWindow-->angleTextCtrl.extent.y / 2;
}
//-----------------------------------------------------------------------------
function updateTrebuchetRopeAngle()
{
	if (!isObject(TrebuchetWindow))
		return;
		
	%sideX = TrebuchetWindow-->trebuchetRope.extent.x;// - AttackSlider-->sliderCtrl.extent.x;
	%sideY = TrebuchetWindow-->trebuchetRope.extent.y - (AttackSlider-->sliderCtrl.position.y + AttackSlider-->sliderCtrl.extent.y / 2) - 6;
	%angle = mAsin(%sideY / mSqrt(%sideX * %sideX + %sideY * %sideY));
	TrebuchetWindow-->trebuchetRope.angle = -1 * %angle;
}
//-----------------------------------------------------------------------------