
function createBaseTooltip()
{
	if (isObject(TooltipFirstPnl) == false)
	{
		new GuiStackControl(TooltipFirstPnl)
		{
			position = "0 0";
			extent = "300 20";
			profile = "GuiBaseTextProfile";
			stackingType = "Horizontal";
			horizStacking = "Right to Left";
			padding = -27;
			dynamicSize = "1";
			dynamicNonStackExtent = "1";
			changeChildPosition = "0";
			changeChildSizeToFit = "0";

			new GuiControl(TooltipMainBackground)
			{
				position = "0 0";
				extent = "300 30";
				Profile = "GuiAtlas1TiledImageProfile";
				visible = true;

				TopIndex0 = TooltipBorderTop;
				RightIndex0 = TooltipBordertRight;
				BottomIndex0 = TooltipBorderBottom;
				LeftIndex0 = TooltipBorderLeft;
				TopLeftIndex = TooltipBorderTLAngle;
				TopRightIndex = TooltipBorderTRAngle;
				BottomRightIndex = TooltipBorderBRAngle;
				BottomLeftIndex = TooltipBorderBLAngle;
				BackgroundIndex = TooltipBackground;

				new GuiControl()
				{
					position = "11 11";
					extent = "278 8";
					vertSizing = "height";
					horizSizing = "width";
					Profile = "GuiAtlas1TiledImageProfile";
					visible = true;

					TopIndex0 = FringeTopShadow;
					RightIndex0 = FringeRightShadow;
					BottomIndex0 = FringeBottomShadow;
					LeftIndex0 = FringeLeftShadow;
					TopLeftIndex = FringeTLAngleShadow;
					TopRightIndex = FringeTRAngleShadow;
					BottomRightIndex = FringeBRAngleShadow;
					BottomLeftIndex = FringeBLAngleShadow;
				};

				new GuiStackControl(TooltipMainControl)
				{
					position = "0 0";
					extent = "300 30";
					profile = "GuiBaseTextProfile";
					stackingType = "Vertical";
					class = "ChildSizeToFitStackControl";
					padding = 15;
					dynamicSize = "1";
					dynamicNonStackExtent = "1";
					changeChildPosition = "1";
					changeChildSizeToFit = "0";
					TopIndent = 54;
					LeftIndent = 55;
					RightIndent = 54;
					BottomIndent = 54;
				};
			};

			new GuiBitmapCtrl(TooltipDecor)
			{
				position = "0 0";
				Extent = "27 64";
				Visible = "1";
				resize = true;
				profile = "GuiAtlas1ImageProfile";
				imageIndex = TooltipLeftDecor;
			};
		};
	}

	TooltipDecor.position = "0 0";
	TooltipMainControl.clear();
	TooltipMainControl.dynamicSize = true;
	TooltipMainControl.changeChildSizeToFit = false;
}

function calcTooltipPosition(%cursorPosX, %cursorPosY, %windowSizeX, %windowSizeY)
{
	%shadow = 17;
	%decorCenterPos = 100;
	%offset = "0 0";

	TooltipMainBackground.setExtent(TooltipMainControl.getExtent());

	%tooltipsize = TooltipFirstPnl.getExtent();


	if (%windowSizeX < %cursorPosX + %tooltipsize.x)
	{
		%offset.x = %cursorPosX + %tooltipsize.x - %windowSizeX;
	}

	if (%windowSizeY < %cursorPosY + %tooltipsize.y)
	{
		%offset.y = %cursorPosY + %tooltipsize.y - %windowSizeY;
	}

	if (%offset.x > 0)
	{
		TooltipFirstPnl.position.x = %cursorPosX - %tooltipsize.x;
		TooltipFirstPnl.reorderChild(TooltipMainControl, TooltipDecor);
		TooltipDecor.imageIndex = TooltipRightDecor;
		TooltipFirstPnl.horizStacking = "Left to Right";
	}
	else
	{
		TooltipFirstPnl.position.x = %cursorPosX;
		TooltipFirstPnl.reorderChild(TooltipDecor, TooltipMainControl);
		TooltipDecor.imageIndex = TooltipLeftDecor;
		TooltipFirstPnl.horizStacking = "Right to Left";
	}

	if (%offset.y > 0)
	{
		if (TooltipFirstPnl.extent.y < %decorCenterPos * 2)
		{
			TooltipDecor.position.y = (TooltipMainControl.extent.y - TooltipDecor.extent.y) / 2;
		}
		else
		{
			TooltipDecor.position.y = TooltipMainControl.extent.y - %decorCenterPos - TooltipDecor.extent.y / 2;
		}

		TooltipFirstPnl.position.y = %cursorPosY - TooltipDecor.position.y - TooltipDecor.extent.y / 2;

		if (%windowSizeY < TooltipFirstPnl.position.y + %tooltipsize.y)
		{
			%bottom = TooltipMainControl.extent.y - TooltipDecor.position.y - TooltipDecor.extent.y - %shadow;
			%need = TooltipFirstPnl.position.y + %tooltipsize.y - %windowSizeY;

			if (%bottom > %need)
			{
				TooltipFirstPnl.position.y -= %need;
				TooltipDecor.position.y += %need;
			}
			else
			{
				TooltipFirstPnl.position.y -= %bottom;
				TooltipDecor.position.y += %bottom;
			}
		}
	}
	else
	{
		if (TooltipFirstPnl.extent.y < %decorCenterPos * 2)
		{
			TooltipDecor.position.y = (TooltipMainControl.extent.y - TooltipDecor.extent.y) / 2;
		}
		else
		{
			TooltipDecor.position.y = %decorCenterPos - TooltipDecor.extent.y / 2;
		}

		TooltipFirstPnl.position.y = %cursorPosY - TooltipDecor.position.y - TooltipDecor.extent.y / 2;

		if (TooltipFirstPnl.position.y < 0)
		{
			%top = TooltipDecor.position.y - %shadow;
			%need = -TooltipFirstPnl.position.y;

			if (%top > %need)
			{
				TooltipFirstPnl.position.y += %need;
				TooltipDecor.position.y -= %need;
			}
			else
			{
				TooltipFirstPnl.position.y += %top;
				TooltipDecor.position.y -= %top;
			}
		}
	}
}

function createImageCtrl(%imageIndex)
{
echo("createImageCtrl " @ %imageIndex);
	%gui = new GuiBitmapCtrl()
	{
		position = "0 0";
		Extent = "1 1";
		Visible = "1";
		resize = true;
		profile = "GuiAtlas3ImageProfile";
		imageIndex = %imageIndex;
	};
	return %gui;
}

function createMLTextCtrl()
{
	%gui = new GuiMLTextCtrl()
	{
		position = "0 0";
		extent = "300 100";
		profile = "GuiMLTextTooltipProfile";
		canHit = "false";
		rightOffset = 0;
		bottomOffset = 0;
	};
	return %gui;
}

function createCaptionTextCtrl()
{
	%textCtrl = createTextCtrl("GuiCaptionTextTooltipProfile");
	%textCtrl.extent = "300 20";
	return %textCtrl;
}

function createTextCtrl(%profile, %text)
{
	%gui = new GuiTextCtrl()
	{
		text = %text;
		position = "0 0";
		extent = "300 17";
		profile = %profile;
		canHit = "false"; 
		visible = "1";
	};
	return %gui;
}

function createHorizontalStackControl()
{
	%gui = new GuiStackControl()
	{
		position = "0 0";
		extent = "300 50";
		profile = "GuiBaseTextProfile";
		stackingType = "Horizontal";
		padding = 10;
		dynamicSize = "1";
		dynamicNonStackExtent = "1";
		changeChildPosition = "1";
		changeChildSizeToFit = "0";
	};
	return %gui;
}

function createVerticalStackControl()
{
	%gui = new GuiStackControl()
	{
		position = "0 0";
		extent = "300 50";
		profile = "GuiBaseTextProfile";
		stackingType = "Vertical";
		padding = 2;
		dynamicSize = "1";
		dynamicNonStackExtent = "1";
		changeChildPosition = "1";
		changeChildSizeToFit = "0";
	};
	return %gui;
}

function createDoubleTextCtrl(%profile)
{
	%gui = new CmGuiDoubleValTextCtrl()
	{
		position = "0 0";
		extent = "300 30";
		Profile = %profile;
		canHit = "false";
	};
	return %gui;
}

function createObjectsTypesName(%informer)
{
	%txt = createCaptionTextCtrl();
	TooltipMainControl.add(%txt);
	%txt.setText(%informer.getData("objects_types", "Name"));
}

function createContainersName(%informer)
{
	%txt = createCaptionTextCtrl();
	TooltipMainControl.add(%txt);
	%txt.setText(%informer.getData("containers", "Name"));
}

function createContainersWeight(%informer)
{
	%weightVal = strformat("%.3f", %informer.getData("containers", "Weight"));
	%maxWeightVal = strformat("%.3f", %informer.getData("containers", "MaxWeight"));

	%line = createHorizontalStackControl();
	%line.padding = 16;
	TooltipMainControl.add(%line);

	%pnl = createIconPnl(%line, WeightIcon);

	%textPnl = createHorizontalStackControl();
	%textPnl.padding = "0";

	%textCtrl = createTextCtrl("GuiLightTextTooltipProfile");
	%textCtrl.setText(%weightVal);
	%textPnl.add(%textCtrl);
	%textCtrl = createTextCtrl("GuiGrayTextTooltipProfile");
	%textCtrl.setText("/" @ %maxWeightVal);
	%textPnl.add(%textCtrl);
	%pnl.add(%textPnl);
}

function addRowTooltipinfo(%colName, %colVal, %name, %val)
{
	%colName.add(createTextCtrl("GuiGrayTextTooltipProfile", %name));
	%colVal.add(createTextCtrl("GuiLightTextTooltipProfile", %val));
}

function createIconPnl(%parent, %imageIndex)
{
	%pnl = createHorizontalStackControl();
	%pnl.changeChildPosition = "0";
	%pnl.padding = 2;
	%parent.add(%pnl);
	%icon = createImageCtrl(%imageIndex);
	%icon.setPosition(0, 1);
	%pnl.add(%icon);
	return %pnl;
}

function createIconText(%parent, %imageIndex, %text)
{
	%pnl = createIconPnl(%parent, %imageIndex);
	%textCtrl = createTextCtrl("GuiLightTextTooltipProfile", %text);
	%pnl.add(%textCtrl);
	return %pnl;
}

function createItemsQQW(%informer)
{
	%line = createHorizontalStackControl();
	%line.padding = 16;
	TooltipMainControl.add(%line);

	//Weight
	createIconText(%line, WeightIcon, %informer.getData("items", "Weight"));

	//Quality
	createIconText(%line, QualityIcon, %informer.getData("items", "Quality"));

	//Quantity
	createIconText(%line, QantityIcon, %informer.getData("items", "Quantity"));
}

function createItemsWeight(%informer)
{
	%line = createHorizontalStackControl();
	%line.padding = 16;
	TooltipMainControl.add(%line);

	//Weight
	createIconText(%line, WeightIcon, %informer.getData("items", "Weight"));

	return %line;
}

function createItemsQualityWeight(%informer)
{
	%line = createItemsWeight(%informer);

	//Quality
	createIconText(%line, QualityIcon, %informer.getData("items", "Quality"));
	return %line;
}

function createItemsQuantityWeight(%informer)
{
	%line = createItemsWeight(%informer);

	//Quantity
	createIconText(%line, QantityIcon, %informer.getData("items", "Quantity"));
	return %line;
}

function createItemsQWD(%informer)
{
	%line = createItemsQualityWeight(%informer);
	//Durability
	createItemsDurability(%line, DurabilityIcon, %informer);
}

function createItemsDurability(%parent, %imageIndex, %informer)
{
	%durabilityVal = %informer.getData("items", "Durability");
	%createdDurabilityVal = %informer.getData("items", "CreatedDurability");

	%pnl = createIconPnl(%parent, %imageIndex);

	%textPnl = createHorizontalStackControl();
	%textPnl.padding = "0";

	%textCtrl = createTextCtrl("GuiLightTextTooltipProfile");
	%textCtrl.setText(%durabilityVal);
	%textPnl.add(%textCtrl);
	%textCtrl = createTextCtrl("GuiGrayTextTooltipProfile");
	%textCtrl.setText("/" @ %createdDurabilityVal);
	%textPnl.add(%textCtrl);
	%pnl.add(%textPnl);
}

function createItemsFeatureEffect(%informer)
{
	%feature = %informer.getData("items", "Feature");
	echo("%feature = " @ %feature);

	if (%feature !$= "")
	{
		%textCtrl = createTextCtrl("GuiGoldTextTooltipProfile");
		%textCtrl.setText(%feature);
		TooltipMainControl.add(%textCtrl);
	}

	addItemEffects(%informer,"Effect", "Magnitude", "EffectPositive");
	addItemEffects(%informer,"CraftItemEffect", "CraftItemEffectMagnitude", "CraftEffectPositive");
}

function addItemEffects(%informer, %effectGroup, %effectGroupMagnitude, %effectGroupPositive)
{
	%index = 0;
	%effect = %informer.getDataByIndex("items", %effectGroup, %index);
	if (%effect !$= "")
	{
		%pnl = createVerticalStackControl();
		%pnl.padding = 0;
		TooltipMainControl.add(%pnl);

		%textCtrl = createTextCtrl("GuiGrayTextTooltipProfile");
		%textCtrl.setText(GetMessageIDText(2561) @ ":");
		%pnl.add(%textCtrl);

		while (%effect !$= "")
		{
			%magnitude = %informer.getDataByIndex("items", %effectGroupMagnitude, %index);
			%positive = %informer.getDataByIndex("items", %effectGroupPositive, %index);

			createEffectCtrl(%pnl, %effect, %magnitude, %positive);

			%index++;
			%effect = %informer.getDataByIndex("items", %effectGroup, %index);
		}
	}
}

function createEffectCtrl(%pnl, %effect, %magnitude, %positive)
{
	%profile = "GuiPositiveTextTooltipProfile";
	if (%positive $= "Negative")
	{
		%profile = "GuiNegativeTextTooltipProfile";
	}
	else if (%positive $= "Unknown")
	{
		%profile = "GuiGrayTextTooltipProfile";
	}

	if (%magnitude > 0)
	{
		%effect = %effect @ " (" @ GetMessageIDText(1392) @ %magnitude @ ")";
	}

	%textCtrl = createTextCtrl(%profile);
	%textCtrl.setText(%effect);
	%pnl.add(%textCtrl);
}

function GuiTooltip::onTimer(%this)
{
	findExeconTimer(TooltipMainControl);
}

function findExeconTimer(%parent)
{
	%count = %parent.getCount();
	for(%i = 0; %i < %count; %i++)
	{
		%ctrl = %parent.getObject(%i);
		if (%ctrl.isMethod("onTimer"))
		{
			%ctrl.onTimer();
		}
		findExeconTimer(%ctrl);
	}
}

function createItemRegion(%informer)
{
	%region = %informer.getData("items", "CreatedRegion");
	if (%region  !$= "")
	{
		%line = createHorizontalStackControl();
		TooltipMainControl.add(%line);
		%colName = createVerticalStackControl();
		%line.add(%colName);
		%colVal = createVerticalStackControl();
		%line.add(%colVal);
	
		addRowTooltipinfo(%colName, %colVal, "Region: ", %region);
	}
}

function addSkillInfo(%colName, %colVal, %informer)
{
	%skillName = %informer.getData("equipmentType", "Skill");
	%skillLvl = %informer.getData("equipmentType", "SkillLvl");

	addRowTooltipinfo(%colName, %colVal, GetMessageIDText(2413), %skillName @ " (" @ %skillLvl @ ")");
}

function addItemDescription(%informer)
{
	echo("addItemDescription");
	%des = %informer.getData("objects_types", "Description");
	if (%des !$= "")
	{
		%pnl = createVerticalStackControl();
		%pnl.padding = 15;
		%pnl.TopIndent = 5;
		%pnl.setClassNamespace("ChildSizeToFitStackControl");
		TooltipMainControl.add(%pnl);

		%lineImage = new GuiControl() 
		{
			position = "0 0";
			extent = "10 1";
			minExtent = "1 1";
			profile = "GuiAtlas3TiledImageProfile";
			TopIndex0 = HLine1;
			TopIndexN = HLine4;
			canHit = "false";
		};

		%pnl.add(%lineImage);

		%txt = createMLTextCtrl();
		%txt.profile = "GuiMLDescrTextTooltipProfile";
		%txt.setText(%des);
		%txt.setClassNamespace("tooltipAutosizeMLText");
		%pnl.add(%txt);
	}
}

function addStatInfo(%val, %txt)
{
	%pnl = createHorizontalStackControl();
	%pnl.changeChildPosition = "0";
	%pnl.padding = 2;
	TooltipMainControl.add(%pnl);

	%txtCtrl = createTextCtrl("GuiStatBonusTextTooltipProfile");
	%txtCtrl.setPosition(0, 1);
	%txtCtrl.setText(%val);
	%txtCtrl.setClassNamespace("tooltipStatValText");
	%pnl.add(%txtCtrl);

	%txtCtrl = createMLTextCtrl();
	%txtCtrl.profile = "GuiMLTextTooltipProfile";
	%txtCtrl.setText(%txt);
	%txtCtrl.setClassNamespace("tooltipAutosizeMLText");
	%pnl.add(%txtCtrl);

	$TooltipStatValMaxWidth = 0;
}

function ChildSizeToFitStackControl::onwake(%this)
{
	echo("ChildSizeToFitStackControl::onwake");
	%this.dynamicSize = false;
	%this.changeChildSizeToFit = true;
	%this.updateStack();
}

function tooltipAutosizeMLText::onwake(%this)
{
	%this.forceReflow();
}

function tooltipStatValText::onAutoResize(%this)
{
	echo("tooltipStatValText::onAutoResize");
	%ext = %this.getExtent();

	echo("tooltipStatValText::onAutoResize ext = " @ %ext);

	if (%ext > $TooltipStatValMaxWidth)
	{
		$TooltipStatValMaxWidth = %ext;
		findStatValText(TooltipMainControl);
	}
	else if (%ext < $TooltipStatValMaxWidth)
	{
		%this.setExtent($TooltipStatValMaxWidth, %ext.y);
	}
}

function findStatValText(%parent)
{
	echo("findStatValText");

	%count = %parent.getCount();
	for(%i = 0; %i < %count; %i++)
	{
		%ctrl = %parent.getObject(%i);
		echo("findStatValText %ctrl = " @ %ctrl @ " class = " @ %ctrl.getClassNamespace());
		if (%ctrl.getClassNamespace() $= "tooltipStatValText")
		{
			%ext = %ctrl.getExtent();
			%ctrl.setExtent($TooltipStatValMaxWidth, %ext.y);
			break;
		}
		else
		{
			findStatValText(%ctrl);
		}
	}
}
