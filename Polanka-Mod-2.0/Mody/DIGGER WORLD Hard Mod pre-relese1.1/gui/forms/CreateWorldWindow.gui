//-----------------------------------------------------------------------------
// Craftsman & Marksman: Life is feudal
//-----------------------------------------------------------------------------

function createCreateWorldWindow()
{
	
	%create_world_gui = new GuiCreateWorldWindow(CreateWorldWindow)
	{
		position = "0 0";
		minExtent = "1024 300";
		extent = "100% 100%";
		profile = "GuiOverlayAutoCursorProfile";
		canHideOnFreelook = "0";
		
		new GuiContainer()
		{
			position = "0 0";
			extent = "100% 100%";
			minExtent = "8 2";
			profile = "GuiDefaultProfile";
			visible = "1";
			active = "1";
			isContainer = "1";
			
			// caption
			new GuiContainer()
			{
				docking = "top";
				position = "0 0";
				extent = "100% 83";
				minExtent = "8 2";
				profile = "GuiDefaultProfile";
				visible = "1";
				active = "1";
				isContainer = "1";
				
				//back
				new GuiBitmapCtrl()
				{
					position = "0 0";
					extent = "100% 82";
					wrap = "1";
					visible = "1";
					active = "1";
					bitmap = "gui/images/charselect_header.png";
				};
				
				new GuiTextCtrl()
				{
					position = "36 10";
					extent = "100 62";
					profile = "CreateWorldWindowCaptionTextProfile";
					visible = "1";
					active = "1";
					text = GetMessageIDText(2259);//"World Creation";
					internalName = "captionTextCtrl";
				};
			};

			// created worlds info
			new GuiContainer()
			{
				docking = "client";
				position = "0 0";
				extent = "10 10";
				minExtent = "8 2";
				profile = "CreateWorldWindowDefaultProfile1";
				visible = "1";
				active = "1";
				isContainer = "1";
			
				// left panel - created worlds list
				new GuiContainer()
				{
					docking = "left";
					position = "0 0";
					extent = "255 10";
					minExtent = "8 2";
					profile = "GuiDefaultProfile";
					visible = "1";
					active = "1";
					isContainer = "1";
					
					new GuiContainer()
					{
						docking = "top";
						position = "0 0";
						extent = "10 250";
						minExtent = "8 2";
						profile = "GuiDefaultProfile";
						visible = "1";
						active = "1";
						isContainer = "1";
					
						new guiHorzTilingButtonCtrl()
						{
							text = GetMessageIDText(2257); // Create New World
							groupNum = "-1";
							buttonType = "PushButton";
							position = "5 25";
							extent = "210 56";
							profile = BuildPositionButtonProfile;
							visible = "1";
							active = "1";
							command = "CreateWorldWindow.onCreateNewWorldBtnClick();";
							horizSizing = "center";
							imageIndex = H56Btn;
						};

						// label about firewall and antivirus
						new GuiBitmapCtrl() 
						{
							position = "25 95";
							extent = "22 22";//"38 36";
							profile = "GuiAtlas1ImageProfile";
							visible = "1";
							active = "1";
							isContainer = "1";
							imageIndex = ImportantRemarkIcon;
						};
						
						new GuiMLTextCtrl()
						{
							text = "<just:left>" @ GetMessageIDText(1438);
							lineSpacing = "0";
							allowColorChars = "0";
							maxChars = "-1";
							useURLMouseCursor = "0";
							isContainer = "0";
							Profile = "CreateWorldWindowAttentionTextProfile";
							position = "52 95";
							extent = "175 10";
							MinExtent = "8 2";
							canSave = "1";
							canHit = "0";
							Visible = "1";
							canSaveDynamicFields = "0";
						};
						
						//delim
						new GuiBitmapCtrl()
						{
							imageIndex = HLine1;
							profile = "GuiAtlas3ImageProfile";
							position = "30 170";
							extent = "200 1";
							wrap = true;
							HorizSizing = "center";
						};
						
						new GuiMLTextCtrl()
						{
							position = "30 205";
							extent = "200 50";
							text = "<just:left>" @ GetMessageIDText(2258); // "Your Saved Worlds"
							profile = "CreateWorldWindowLeftPanelTextProfile";
							canHit = "false"; 
							visible = "1";
							docking = "bottom";
						};
					};
					
					new GuiScrollCtrl()
					{
						hScrollBar = "alwaysOff";
						vScrollBar = "alwaysOff";//dynamic
						vertSizing = "height";
						profile = "GuiEagleScrollBarProfile";
						constantThumbHeight = true;
						childMargin = "0 1";
						trackOffset = 8;
						lockHorizScroll = true;
						arrowSadowSize = 0;
						addContentWidth = 27; 
						position = "0 170";//0 195
						extent = "11 117";
						isContainer = "1";
						docking = "client";
						//addContentHeight = 30;
						
						new GuiStackControl()
						{
							position = "0 0";
							extent = "100 10";
							profile = "CreateWorldWindowDefaultProfile";
							internalName = "createdWorldsStackCtrl";
							Stacking = Vertical;
							padding = 10;
							dynamicSize = "1";
							dynamicNonStackExtent = "0";
							changeChildPosition = "0";
							changeChildSizeToFit = "0";
							TopIndent = 10;
						};
					
					};
				};
				
				// right panel - selected world info
				new GuiContainer(CreateWorldInfoPanel)
				{
					docking = "client";
					position = "0 0";
					extent = "10 10";
					minExtent = "8 2";
					profile = "GuiBaseTextProfile";
					visible = "0";   // hidden by default
					active = "1";
					isContainer = "1";
					
					// background image
					new GuiBitmapCtrl()
					{
						position = "0 0";
						extent = "100% 100%";
						imageIndex = LearningWindowBackgroundTransparent;//LearningWindowBackground;
						profile = "GuiAtlas3ImageProfile";
						wrap = "1";
						visible = "1";
						active = "1";
					};
					
					new GuiBitmapCtrl()
					{
						position = "380 0";
						extent = "1147 1000";
						visible = "1";
						active = "1";
						bitmap = "gui/images/world_back.png";
						//horizSizing = "right";
					};
					
					// separator
					new GuiControl() 
					{
						position = "0 0";
						extent = "20 100%";
						//horizSizing = right;
						profile = GuiAtlas1TiledImageProfile;
						visible = "1";
						active = "1";
						hovertime = "1000";
						isContainer = "0";
						canSave = "1";
						canSaveDynamicFields = "1";
						LeftIndex0 = FringeLeftShadow;
					};
					
					new GuiScrollCtrl()
					{
						position = "0 0";
						extent = "100% 100%";
						hScrollBar = "alwaysOff";
						vScrollBar = "alwaysOn";
						horizSizing = "width";
						vertSizing = "height";
						profile = "GuiEagleScrollBarProfile";
						constantThumbHeight = true;
						childMargin = "0 7";
						trackOffset = 8;
						lockHorizScroll = true;
						arrowSadowSize = 0;
						addContentWidth = 27; 
						isContainer = "1";
						
						new GuiStackControl()
						{
							position = "20 0";
							extent = "100 10";
							profile = "GuiBaseTextProfile";
							internalName = "createdWorldsStackCtrlRight";
							Stacking = Vertical;
							padding = 0;
							dynamicSize = "1";
							dynamicNonStackExtent = "0";
							changeChildPosition = "0";
							changeChildSizeToFit = "0";
							
							// world name
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 77";
								minExtent = "8 2";
								profile = "GuiBaseTextProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2279); // "World Name"
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
								};
								
								//Edit back
								new GuiControl()
								{
									position = "290 15";
									extent = "470 38";
									profile = CreateWorldWindowEditBackProfile;
									visible = "1";
									active = "1";
									
									TopIndex0 = TopDialogBorder;
									RightIndex0 = RightDialogBorder;
									BottomIndex0 = BottomDialogBorder;
									LeftIndex0 = LeftDialogBorder;
									TopLeftIndex = TopLeftAngleDialog;
									TopRightIndex = TopRightAngleDialog;
									BottomRightIndex = BottomRightAngleDialog;
									BottomLeftIndex = BottomLeftAngleDialog;
								};
								
								new GuiTextEditCtrl()
								{
									position = "290 15";
									extent = "470 38";
									historySize = "0";
									tabComplete = "0";
									sinkAllKeyEvents = "0";
									minExtent = "100 2";
									profile = "CreateWorldWindowTextEditProfile";
									visible = "1";
									active = "1";
									internalName = "worldNameEditCtrl";
									 
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2260); //Choose some creative to attract players
									lineSpacing = "0";
									bottomOffset = "0";
									position = "290 57";
									extent = "470 19";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
							};
							
							// Public Password
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 67";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
							
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2261); // Public Password
									lineSpacing = "0";
									bottomOffset = "0";
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
								
								//Edit back
								new GuiControl()
								{
									position = "290 15";
									extent = "130 38";
									profile = "CreateWorldWindowEditBackProfile";
									visible = "1";
									active = "1";
									
									TopIndex0 = TopDialogBorder;
									RightIndex0 = RightDialogBorder;
									BottomIndex0 = BottomDialogBorder;
									LeftIndex0 = LeftDialogBorder;
									TopLeftIndex = TopLeftAngleDialog;
									TopRightIndex = TopRightAngleDialog;
									BottomRightIndex = BottomRightAngleDialog;
									BottomLeftIndex = BottomLeftAngleDialog;
								};
								
								new GuiTextEditCtrl()
								{
									position = "290 15";
									extent = "130 38";
									historySize = "0";
									tabComplete = "0";
									sinkAllKeyEvents = "0";
									minExtent = "100 2";
									profile = "CreateWorldWindowTextEditProfile";
									visible = "1";
									active = "1";
									internalName = "passwordEditCtrl";
									password = "1";
									vertSizing = "center";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2262); // Players must know it to enter the World
									position = "430 10";
									extent = "330 19";
									//position = "440 0";
									//extent = "300 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
							};

							
							// Admin (GM) Password
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 67";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
							
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1116);//Admin (GM) Password
									lineSpacing = "0";
									bottomOffset = "0";
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
								
								//Edit back
								new GuiControl()
								{
									position = "290 15";
									extent = "130 38";
									profile = "CreateWorldWindowEditBackProfile";
									visible = "1";
									active = "1";
									vertSizing = "center";
									
									TopIndex0 = TopDialogBorder;
									RightIndex0 = RightDialogBorder;
									BottomIndex0 = BottomDialogBorder;
									LeftIndex0 = LeftDialogBorder;
									TopLeftIndex = TopLeftAngleDialog;
									TopRightIndex = TopRightAngleDialog;
									BottomRightIndex = BottomRightAngleDialog;
									BottomLeftIndex = BottomLeftAngleDialog;
								};
								
								new GuiTextEditCtrl()
								{
									position = "290 15";
									extent = "130 38";
									historySize = "0";
									tabComplete = "0";
									sinkAllKeyEvents = "0";
									minExtent = "100 2";
									profile = "CreateWorldWindowTextEditProfile";
									visible = "1";
									active = "1";
									internalName = "adminPasswordEditCtrl";
									password = "1";
									vertSizing = "center";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2280);  // "Create strong password to protect World"
									position = "430 10";
									extent = "330 19";
									//position = "440 0";
									//extent = "300 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
							};
							
							// Server port
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 67";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";

								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1133);//Server Port
									lineSpacing = "0";
									bottomOffset = "0";
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
								
								//Edit back
								new GuiControl()
								{
									position = "290 15";
									extent = "130 38";
									profile = "CreateWorldWindowEditBackProfile";
									visible = "1";
									active = "1";
									vertSizing = "center";
									
									TopIndex0 = TopDialogBorder;
									RightIndex0 = RightDialogBorder;
									BottomIndex0 = BottomDialogBorder;
									LeftIndex0 = LeftDialogBorder;
									TopLeftIndex = TopLeftAngleDialog;
									TopRightIndex = TopRightAngleDialog;
									BottomRightIndex = BottomRightAngleDialog;
									BottomLeftIndex = BottomLeftAngleDialog;
								};
								
								new GuiTextEditCtrl()
								{
									position = "290 15";
									extent = "130 38";
									maxLength = "5";
									historySize = "0";
									tabComplete = "0";
									sinkAllKeyEvents = "0";
									minExtent = "100 2";
									profile = "CreateWorldWindowNumbersTextEditProfile";
									visible = "1";
									active = "1";
									internalName = "serverPortEditCtrl";
									vertSizing = "center";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(1134);//(do not change unless required)
									position = "430 0";
									extent = "330 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
							};
							
							// Private check-box
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 61";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1118);//Private
									position = "20 19";
									extent = "260 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
								
								new GuiCheckBoxCtrl()
								{
									position = "290 0";
									extent = "34 34";
									buttonType = "ToggleButton";
									profile = "GuiAtlas1ImageProfile";
									visible = "1";
									active = "1";
									isBig = "1";
									bitmapMode = "centered";
									internalName = "isPrivateCtrl";
									vertSizing = "center";
									text = "";
									imageIndexStateOn = "CheckBoxActiveNormal";
									imageIndexStateOff = "CheckBoxRadioButtonNormal";
									imageIndexMouseOver = "CheckBoxActiveMouseOver";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2263); // World will NOT appear in Public Server list
									position = "340 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "400 10";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
							};
							
							// Game mode
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 67";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1119);//Game Mode
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new GuiPopUpMenuCtrlEx(GuiGameModePopup) 
								{
									position = "290 0";
									extent = "470 52";
									Profile = "CreateCharWindowPopUpProfile";
									backPnlProfile = "GuiPopUpBorder";
									buttonOffset = 5;
									cellHeight = 46;
									createScrollCommand = "CreateWorldWindow.createGameModePopUpScroll();";
									maxPopupHeight = 235;
									leftIndentMenu = 24;
									rightIndentMenu = 24;
									addScrollSize = "-3 0";
									vertSizing = "center";
									menuOffset = 0;
								};
							};
							
							// Game mode hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 50";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "";
									position = "315 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "420 10";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
									internalName = "gameModeHintText";
									//vertSizing = "center";
								};
							};
							
							// Maximum players on Server
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 67";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2264); // Maximum players on Server
									lineSpacing = "0";
									bottomOffset = "0";
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldMaximumPlayersSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
								
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldMaximumPlayersValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							new GuiBitmapCtrl()
							{
								imageIndex = HLine1;
								profile = "GuiAtlas3ImageProfile";
								position = "0 0";
								extent = "95% 1";
								wrap = true;
								HorizSizing = "center";
							};
							
							new GuiControl()
							{
								position = "0 0";
								extent = "20 20";
							};
							
							// Skills and Stats progression multiplier
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 60";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1120);
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldSkillsStatsMultiplierSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
			
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldSkillsStatsMultiplierValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// Skills and Stats progression multiplier hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 35";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2265); // The rate of increase your skills and knowledge
									position = "20 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "260 10";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2266); // Middle level of rate, rarely used on servers
									position = "290 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "470 10";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
							};
							
							// SkillsCap
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 50";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(861); // Craft
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldSkillsCapSlider1)
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldSkillsCapValue1)
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};

							// SkillsCap
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 50";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(862); // Combat
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldSkillsCapSlider2)
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldSkillsCapValue2)
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};

							// SkillsCap
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 50";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(863); // Minor
									position = "20 19";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldSkillsCapSlider3)
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldSkillsCapValue3)
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// SkillsCap hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 35";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2267); //The maximum amount of skill...
									position = "20 0";
									extent = "260 19";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2268); // The player will have to choose whom to be a farmer or blacksmith
									position = "290 0";
									extent = "470 19";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
				
							};
							
							// Terraforming speed multiplier
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 50";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1123);
									position = "20 0";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldTerraformingSpeedSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldTerraformingSpeedValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// Terraforming speed multiplier hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 35";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";

								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2269); // Digging speed of your character
									position = "20 0";
									extent = "260 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2270); // The more - the faster
									position = "290 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "470 10";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
							};
				
							// Crafting period (seconds)
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 50";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2271);  // Crafting period (seconds)
									position = "20 0";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldCraftingPeriodSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 755";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldCraftingPeriodValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// Crafting period (seconds) hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 35";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2273);  // The more, the slower
									position = "290 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "470 19";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
							};
							
							// Animal Breeding period
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 60";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1127);
									position = "20 0";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldAnimalBreedingPeriodSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									visible = "1";
									active = "1";
									vertSizing = "center";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldAnimalBreedingPeriodValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// Animal Breeding period hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 35";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";

								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2272);  // The growth rate of your pet
									position = "20 0";
									extent = "260 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2273);  // The more - the slower
									position = "290 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "470 19";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
							};
				
							// Day Cycle
							new GuiControl()
							{
								position = "0 857";
								extent = "100% 60";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1129);
									position = "20 0";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									vertSizing = "center";
									bottomOffset = "0";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldDayCycleSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									minExtent = "8 2";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
									visible = "1";
									active = "1";
									vertSizing = "center";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;

									new GuiTextEditSliderCtrl(CreateWorldDayCycleValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// DayCycle period hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 35";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2274);
									position = "20 0";
									extent = "260 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(2275);
									position = "290 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "470 10";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
							};
				
							// Wild Animals count
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 60";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";

								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1131);
									position = "20 0";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldWildAnimalsCountSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									minExtent = "8 2";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
									visible = "1";
									active = "1";
									vertSizing = "center";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";

									new GuiTextEditSliderCtrl(CreateWorldWildAnimalsCountValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// Wild Animals count hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 40";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";

								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2276);// The number of wolves, bears, deer will be in the game world
									position = "20 0";
									extent = "260 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
								new GuiBitmapCtrl() 
								{
									position = "290 0";
									extent = "22 22";//"38 36";
									profile = "GuiAtlas1ImageProfile";
									visible = "1";
									active = "1";
									isContainer = "1";
									imageIndex = ImportantRemarkIcon;
								};
								
								new GuiMLTextCtrl()
								{
									text = GetMessageIDText(1132);
									position = "317 1";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "460 10";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
							};
				
							// Object Decay Rate
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 60";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1476);
									position = "20 0";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
									vertSizing = "center";
								};
								
								new CmGuiArrowSliderCtrl(CreateWorldObjectDecayRateSlider) 
								{
									step = "1";
									ticks = "0";
									snap = "0";
									value = "0";
									position = "290 0";
									extent = "330 32";
									profile = "GuiHorizSliderProfile";
									useMouseWheel = "0";
									trackVOffset = "8";
									thumbOffset = "0 0";
									visible = "1";
									active = "1";
									vertSizing = "center";
								};
				
								// count
								new GuiControl() 
								{
									position = "630 0";
									extent = "80 35";
									minExtent = "8 2";
									profile = GuiAtlas3TiledImageProfile;
									leftIndex0 = SmallHexagonalTextFieldLeft;
									backgroundIndex = SmallHexagonalTextFieldCenter;
									rightIndex0 = SmallHexagonalTextFieldRight;
									visible = "1";
									active = "1";
									isContainer = "1";
									vertSizing = "center";

									new GuiTextEditSliderCtrl(CreateWorldObjectDecayRateValue) 
									{
										format = "%d";
										renderArrow = "false";
										increment = "1";
										focusOnMouseWheel = "0";
										historySize = "0";
										tabComplete = "0";
										sinkAllKeyEvents = "0";
										text = "0";
										maxLength = "1024";
										position = "0 0";
										extent = "80 35";
										minExtent = "8 2";
										horizSizing = "right";
										vertSizing = "bottom";
										profile = "CreateCharButtonProfile";
										visible = "1";
										active = "1";
									};
								};
							};
							
							// Object Decay Rate hint
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 35";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(2277); // The destruction of the buildings in the world
									position = "20 0";
									extent = "260 10";
									lineSpacing = "0";
									bottomOffset = "0";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
								
								new GuiMLTextCtrl(CreateWorldWindowObjectDecayHint)
								{
									text = GetMessageIDText(2278);  // Buildings do not collapse at all
									position = "290 0";
									lineSpacing = "0";
									bottomOffset = "0";
									extent = "470 19";
									profile = "CreateWorldWindowSmallTextProfile";
									canHit = "false"; 
									visible = "1";
								};
							};
							
							//delim
							new GuiBitmapCtrl()
							{
								imageIndex = HLine1;
								profile = "GuiAtlas3ImageProfile";
								position = "0 0";
								extent = "95% 1";
								wrap = true;
								HorizSizing = "center";
							};
							
							//space
							new GuiControl()
							{
								position = "0 0";
								extent = "20 20";
							};
				
							// Judgement Hour Settings
							new GuiControl()
							{
								position = "0 0";
								extent = "100% 220";
								minExtent = "8 2";
								profile = "GuiDefaultProfile";
								visible = "1";
								active = "1";
								isContainer = "1";
								
								new GuiMLTextCtrl()
								{
									text = "<just:right>" @ GetMessageIDText(1486);
									position = "20 0";
									extent = "260 10";
									profile = "CreateWorldWindowTextProfile";
									canHit = "false"; 
									visible = "1";
									lineSpacing = "0";
									bottomOffset = "0";
								};
								
								// start time
								new GuiControl()
								{
									position = "0 35";
									extent = "370 60";
									minExtent = "8 2";
									profile = "GuiDefaultProfile";
									visible = "1";
									active = "1";
									isContainer = "1";
								
									new GuiMLTextCtrl()
									{
										text = "<just:right>" @ GetMessageIDText(1487);//Start Time (24 hours HH:MM):
										position = "20 0";
										extent = "260 10";
										profile = "CreateWorldWindowJudgeTextProfile";
										canHit = "false"; 
										visible = "1";
										lineSpacing = "0";
										bottomOffset = "0";
										vertSizing = "center";
									};
									
									new GuiControl() 
									{
										position = "290 0";
										extent = "80 35";
										visible = "1";
										active = "1";
										isContainer = "1";
										vertSizing = "center";
										profile = GuiAtlas3TiledImageProfile;
										leftIndex0 = SmallHexagonalTextFieldLeft;
										backgroundIndex = SmallHexagonalTextFieldCenter;
										rightIndex0 = SmallHexagonalTextFieldRight;

										new GuiTextEditCtrl() 
										{
											format = "%d";
											renderArrow = "false";
											range = "1 64";
											increment = "1";
											focusOnMouseWheel = "0";
											historySize = "0";
											tabComplete = "0";
											sinkAllKeyEvents = "0";
											text = "0";
											maxLength = "5";
											position = "0 0";
											extent = "80 35";
											minExtent = "8 2";
											horizSizing = "right";
											vertSizing = "bottom";
											profile = "NumericTextEditSliderProfile";
											visible = "1";
											active = "1";
											internalName = "judgementHourStartTimeCtrl";
										};
									};
								};
								
								// duration
								new GuiControl()
								{
									position = "0 95";
									extent = "370 60";
									minExtent = "8 2";
									profile = "GuiDefaultProfile";
									visible = "1";
									active = "1";
									isContainer = "1";

									new GuiMLTextCtrl()
									{
										text = "<just:right>" @ GetMessageIDText(1488);//Duration (Minutes):
										position = "20 0";
										extent = "260 20";
										profile = "CreateWorldWindowJudgeTextProfile";
										canHit = "false"; 
										visible = "1";
										lineSpacing = "0";
										bottomOffset = "0";
										vertSizing = "center";
									};
								
									new GuiControl() 
									{
										position = "290 0";
										extent = "80 35";
										visible = "1";
										active = "1";
										
										profile = GuiAtlas3TiledImageProfile;
										leftIndex0 = SmallHexagonalTextFieldLeft;
										backgroundIndex = SmallHexagonalTextFieldCenter;
										rightIndex0 = SmallHexagonalTextFieldRight;
										isContainer = "1";
										vertSizing = "center";

										new GuiTextEditCtrl() 
										{
											range = "1 9999";
											increment = "1";
											focusOnMouseWheel = "0";
											historySize = "0";
											tabComplete = "0";
											sinkAllKeyEvents = "0";
											text = "0";
											maxLength = "4";
											position = "0 0";
											extent = "80 35";
											minExtent = "8 2";
											horizSizing = "right";
											vertSizing = "bottom";
											profile = "NumericTextEditSliderProfile";
											visible = "1";
											active = "1";
											internalName = "judgementHourDurationCtrl";
										};
									};
								};
								
								// Schedule
								new GuiControl()
								{
									position = "420 47";
									extent = "380 100%";
									minExtent = "8 2";
									profile = "GuiDefaultProfile";
									visible = "1";
									active = "1";
									isContainer = "1";
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1489);  //Schedule
										position = "0 0";
										extent = "200 20";
										profile = "CreateWorldWindowJudgeTextProfile";
										canHit = "false"; 
										visible = "1";
									};
									
									// Mon
									new GuiCheckBoxCtrl() 
									{
										position = "9 30";
										extent = "31 31";
										text = "";
										groupNum = "1";
										buttonType = "ToggleButton";
										useMouseEvents = "0";
										profile = "CreateCharGenderCheckboxProfile";
										defaultState = true;
										indentText = "7";
										internalName = "judgementHourSchedule_Day1";

										imageIndexStateOn = "RadioButtonActiveNormal";
										imageIndexStateOff = "CheckBoxRadioButtonNormal";
										imageIndexMouseOver = "RadioButtonActiveMouseOver";
									};
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1490);  // Mon
										position = "0 65";
										extent = "50 15";
										profile = "CreateWorldWindowJudgeDayTextProfile";
										canHit = "false"; 
										visible = "1";
									};

									// Tue
									new GuiCheckBoxCtrl() 
									{
										position = "59 30";
										extent = "31 31";
										text = "";
										groupNum = "1";
										buttonType = "ToggleButton";
										useMouseEvents = "0";
										profile = "CreateCharGenderCheckboxProfile";
										defaultState = true;
										indentText = "7";
										internalName = "judgementHourSchedule_Day2";

										imageIndexStateOn = "RadioButtonActiveNormal";
										imageIndexStateOff = "CheckBoxRadioButtonNormal";
										imageIndexMouseOver = "RadioButtonActiveMouseOver";
									};
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1491);  // Tue
										position = "50 65";
										extent = "50 15";
										profile = "CreateWorldWindowJudgeDayTextProfile";
										canHit = "false"; 
										visible = "1";
									};
									
									// Wed
									new GuiCheckBoxCtrl() 
									{
										position = "109 30";
										extent = "31 31";
										text = "";
										groupNum = "1";
										buttonType = "ToggleButton";
										useMouseEvents = "0";
										profile = "CreateCharGenderCheckboxProfile";
										defaultState = true;
										indentText = "7";
										internalName = "judgementHourSchedule_Day3";

										imageIndexStateOn = "RadioButtonActiveNormal";
										imageIndexStateOff = "CheckBoxRadioButtonNormal";
										imageIndexMouseOver = "RadioButtonActiveMouseOver";
									};
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1492);  // Wed
										position = "100 65";
										extent = "50 15";
										profile = "CreateWorldWindowJudgeDayTextProfile";
										canHit = "false"; 
										visible = "1";
									};
									
									// Thu
									new GuiCheckBoxCtrl() 
									{
										position = "159 30";
										extent = "31 31";
										text = "";
										groupNum = "1";
										buttonType = "ToggleButton";
										useMouseEvents = "0";
										profile = "CreateCharGenderCheckboxProfile";
										defaultState = true;
										indentText = "7";
										internalName = "judgementHourSchedule_Day4";

										imageIndexStateOn = "RadioButtonActiveNormal";
										imageIndexStateOff = "CheckBoxRadioButtonNormal";
										imageIndexMouseOver = "RadioButtonActiveMouseOver";
									};
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1493);  // Thu
										position = "150 65";
										extent = "50 15";
										profile = "CreateWorldWindowJudgeDayTextProfile";
										canHit = "false"; 
										visible = "1";
									};
									
									// Fri
									new GuiCheckBoxCtrl() 
									{
										position = "209 30";
										extent = "31 31";
										text = "";
										groupNum = "1";
										buttonType = "ToggleButton";
										useMouseEvents = "0";
										profile = "CreateCharGenderCheckboxProfile";
										defaultState = true;
										indentText = "7";
										internalName = "judgementHourSchedule_Day5";

										imageIndexStateOn = "RadioButtonActiveNormal";
										imageIndexStateOff = "CheckBoxRadioButtonNormal";
										imageIndexMouseOver = "RadioButtonActiveMouseOver";
									};
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1494);  // Fri
										position = "200 65";
										extent = "50 15";
										profile = "CreateWorldWindowJudgeDayTextProfile";
										canHit = "false"; 
										visible = "1";
									};
									
									// Sat
									new GuiCheckBoxCtrl() 
									{
										position = "259 30";
										extent = "31 31";
										text = "";
										groupNum = "1";
										buttonType = "ToggleButton";
										useMouseEvents = "0";
										profile = "CreateCharGenderCheckboxProfile";
										defaultState = true;
										indentText = "7";
										internalName = "judgementHourSchedule_Day6";

										imageIndexStateOn = "RadioButtonActiveNormal";
										imageIndexStateOff = "CheckBoxRadioButtonNormal";
										imageIndexMouseOver = "RadioButtonActiveMouseOver";
									};
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1495);  // Sat
										position = "250 65";
										extent = "50 15";
										profile = "CreateWorldWindowJudgeDayTextProfile";
										canHit = "false"; 
										visible = "1";
									};
									
									// Sunday
									new GuiCheckBoxCtrl() 
									{
										position = "309 30";
										extent = "31 31";
										text = "";
										groupNum = "1";
										buttonType = "ToggleButton";
										useMouseEvents = "0";
										profile = "CreateCharGenderCheckboxProfile";
										defaultState = true;
										indentText = "7";
										internalName = "judgementHourSchedule_Day7";

										imageIndexStateOn = "RadioButtonActiveNormal";
										imageIndexStateOff = "CheckBoxRadioButtonNormal";
										imageIndexMouseOver = "RadioButtonActiveMouseOver";
									};
									
									new GuiTextCtrl()
									{
										text = GetMessageIDText(1496); // Sunday
										position = "300 65";
										extent = "50 15";
										profile = "CreateWorldWindowJudgeDayTextProfile";
										canHit = "false"; 
										visible = "1";
									};
								};
							};
						};
					};
					
					//Gradient
					new GuiContainer()
					{
						position = "0 0";
						extent = "100% 17";
						horizSizing = "width";
						vertSizing = "height";
						profile = "GuiDefaultProfile";
						isContainer = "1";
						canHit = "false"; 
						docking = "bottom";
						
						new GuiBitmapCtrl()
						{
							position = "0 0";
							extent = "100% 17";
							profile = "GuiAtlas3ImageProfile";
							canHit = "false"; 
							imageIndex = BattleBackground1;
							wrap = "1";
							visible = "1";
							active = "1";
						};
					};
				};
			};
		
			// кнопки и разделитель
			new GuiContainer()
			{
				docking = "bottom";
				position = "0 0";
				extent = "100% 115";
				minExtent = "8 2";
				profile = "GuiDefaultProfile";
				visible = "1";
				active = "1";
				isContainer = "1";
			
				// background image
				new GuiBitmapCtrl()
				{
					position = "0 0";
					extent = "100% 100%";
					imageIndex = LearningWindowBackground;
					profile = "GuiAtlas3ImageProfile";
					wrap = "1";
					visible = "1";
					active = "1";
				};
				
				//Line
				new GuiBitmapCtrl()
				{
					imageIndex = BlackSlimHLineCenter;
					profile = GuiAtlas3ImageProfile;
					extent = "100% 3";
					position = "0 0";
					//vertSizing = top;
					wrap = true;
				};
				
				new guiHorzTilingButtonCtrl()
				{
					text = GetMessageIDText(1137); // Back
					groupNum = "-1";
					buttonType = "PushButton";
					position = "20 24";
					extent = "210 56";
					minExtent = "8 2";
					profile = BuildPositionButtonProfile;
					visible = "1";
					active = "1";
					command = "CreateWorldWindow.onBackBtnClick();";
					accelerator = "escape";
					imageIndex = H56Btn;
				};
					
				// кнопки
				new GuiContainer()
				{
					position = "0 0";
					extent = "462 100%";
					minExtent = "8 2";
					profile = "CreateWorldWindowDefaultProfile";
					visible = "1";
					active = "1";
					isContainer = "1";
					docking = "right";
					
					new guiHorzTilingButtonCtrl()
					{
						text = GetMessageIDText(1135); // Delete
						groupNum = "-1";
						buttonType = "PushButton";
						position = "0 24";
						extent = "210 56";
						minExtent = "8 2";
						profile = BuildPositionButtonProfile;
						visible = "1";
						active = "1";
						command = "CreateWorldWindow.onDeleteBtnClick();";
						imageIndex = H56Btn;
					};
					
					new guiHorzTilingButtonCtrl()
					{
						text = GetMessageIDText(1136); // Start
						groupNum = "-1";
						buttonType = "PushButton";
						position = "228 24";
						extent = "210 56";
						minExtent = "8 2";
						profile = BuildPositionButtonProfile;
						visible = "1";
						active = "1";
						command = "CreateWorldWindow.onStartBtnClick();";
						imageIndex = H56Btn;
					};
				};
			};
		};
	};
	
	return %create_world_gui;
}

function CreateWorldWindow::createWorldButtonInfo(%this, %serverName, %nIndex)
{
	%serverInfoBtn = new guiHorzTilingButtonCtrl()
	{
		position = "30 0";
		extent = "200 44";
		buttonType = "RadioButton";
		groupNum = "1";
		profile = CreateWorldWindowBtnProfile;
		isContainer = "1";
		visible = "1";
		active = "1";
		bitmapMode = "centered";
		useManualIndex = true;
		imageIndex = H44BtnDisabled;//H44Btn;
		depressedImageIndex = H44BtnMouseOver;
		mouseOverImageIndex = H44BtnDisabled;
		disabledImageIndex = H44BtnStateOn;
		worldIndex = %nIndex;
		command = "CreateWorldWindow.onSelectWorldInfo(CreateWorldWindow-->worldInfoBtn" @ %nIndex @ ".worldIndex);";
		internalName = "worldInfoBtn" @ %nIndex;
		text = %serverName;
		
		/*new GuiTextCtrl()
		{
			text = %serverName;
			position = "13 7";
			extent = "166 33";
			profile = "CreateWorldWindowBtnProfile";
			canHit = "false"; 
			visible = "1";
			renderDotIfTextDoesNotFit = true;
		};*/
	};
	
	CreateWorldWindow-->createdWorldsStackCtrl.add(%serverInfoBtn);
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::deleteWorldButtonInfo(%this, %nIndex)
{
	%worldInfoBtn = CreateWorldWindow.findObjectByInternalName("worldInfoBtn" @ %nIndex, true);
	if (isObject(%worldInfoBtn))
	{
		CreateWorldWindow-->createdWorldsStackCtrl.remove(%worldInfoBtn);
		%worldInfoBtn.safeDeleteObject();
	}
}
//-----------------------------------------------------------------------------
function GuiCreateWorldCaption::onCaptionTextResized(%this)
{
	%captionTextCtrl = %this.findObjectByInternalName("captionTextCtrl");
	if (isObject(%captionTextCtrl))
	{
		%this.extent.x = %captionTextCtrl.extent.x + 71 + 55; // borders width
	}
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::createGameModePopUpScroll()
{
	%gui = new GuiScrollCtrl()
	{
		hScrollBar = "alwaysOff";
		vScrollBar = "alwaysOff";
		horizSizing = "width";
		vertSizing = "height";
		profile = "GuiScrollSkillInfoProfile";
		constantThumbHeight = true;
		childMargin = "0 0";
		trackOffset = 8;
		lockHorizScroll = true;
		arrowSadowSize = 7;
		addContentWidth = 27;
	};
	return %gui;
} 
//-----------------------------------------------------------------------------
function GuiGameModePopup::onSelect(%this, %id, %txt)
{
	CreateWorldWindow.onSelectGameMode(%id);
}
//-----------------------------------------------------------------------------
function CreateWorldMaximumPlayersValue::onValueChanged(%this)
{
	CreateWorldWindow.changeMaximumPlayersValue(CreateWorldMaximumPlayersValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldMaximumPlayersSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeMaximumPlayersValue(CreateWorldMaximumPlayersSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeMaximumPlayersValue(%this, %val)
{
	if(CreateWorldWindow.MaximumPlayers == %val || getWordCount(CreateWorldMaximumPlayersSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldMaximumPlayersSlider.range, 0);
	%max = getWord(CreateWorldMaximumPlayersSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldMaximumPlayersValue.text = %newVal;
	CreateWorldMaximumPlayersSlider.value = %newVal;
	CreateWorldWindow.MaximumPlayers = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsCapValue1::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsCapValue1(CreateWorldSkillsCapValue1.text);
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsCapValue2::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsCapValue2(CreateWorldSkillsCapValue2.text);
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsCapValue3::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsCapValue3(CreateWorldSkillsCapValue3.text);
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsCapSlider1::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsCapValue1(CreateWorldSkillsCapSlider1.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsCapSlider2::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsCapValue2(CreateWorldSkillsCapSlider2.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsCapSlider3::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsCapValue3(CreateWorldSkillsCapSlider3.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeSkillsCapValue1(%this, %val)
{
	if(CreateWorldWindow.SkillsCap1 == %val || getWordCount(CreateWorldSkillsCapSlider1.range) < 2)
		return;

	%min = getWord(CreateWorldSkillsCapSlider1.range, 0);
	%max = getWord(CreateWorldSkillsCapSlider1.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldSkillsCapValue1.text = %newVal;
	CreateWorldSkillsCapSlider1.value = %newVal;
	CreateWorldWindow.SkillsCap1 = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeSkillsCapValue2(%this, %val)
{
	if(CreateWorldWindow.SkillsCap2 == %val || getWordCount(CreateWorldSkillsCapSlider2.range) < 2)
		return;

	%min = getWord(CreateWorldSkillsCapSlider2.range, 0);
	%max = getWord(CreateWorldSkillsCapSlider2.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldSkillsCapValue2.text = %newVal;
	CreateWorldSkillsCapSlider2.value = %newVal;
	CreateWorldWindow.SkillsCap2 = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeSkillsCapValue3(%this, %val)
{
	if(CreateWorldWindow.SkillsCap3 == %val || getWordCount(CreateWorldSkillsCapSlider3.range) < 2)
		return;

	%min = getWord(CreateWorldSkillsCapSlider3.range, 0);
	%max = getWord(CreateWorldSkillsCapSlider3.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldSkillsCapValue3.text = %newVal;
	CreateWorldSkillsCapSlider3.value = %newVal;
	CreateWorldWindow.SkillsCap3 = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldTerraformingSpeedValue::onValueChanged(%this)
{
	CreateWorldWindow.changeTerraformingSpeedValue(CreateWorldTerraformingSpeedValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldTerraformingSpeedSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeTerraformingSpeedValue(CreateWorldTerraformingSpeedSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeTerraformingSpeedValue(%this, %val)
{
	if(CreateWorldWindow.TerraformingSpeed == %val || getWordCount(CreateWorldTerraformingSpeedSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldTerraformingSpeedSlider.range, 0);
	%max = getWord(CreateWorldTerraformingSpeedSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldTerraformingSpeedValue.text = %newVal;
	CreateWorldTerraformingSpeedSlider.value = %newVal;
	CreateWorldWindow.TerraformingSpeed = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldCraftingPeriodValue::onValueChanged(%this)
{
	CreateWorldWindow.changeCraftingPeriodValue(CreateWorldCraftingPeriodValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldCraftingPeriodSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeCraftingPeriodValue(CreateWorldCraftingPeriodSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeCraftingPeriodValue(%this, %val)
{
	if(CreateWorldWindow.CraftingPeriod == %val || getWordCount(CreateWorldCraftingPeriodSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldCraftingPeriodSlider.range, 0);
	%max = getWord(CreateWorldCraftingPeriodSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldCraftingPeriodValue.text = %newVal;
	CreateWorldCraftingPeriodSlider.value = %newVal;
	CreateWorldWindow.CraftingPeriod = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldAnimalBreedingPeriodValue::onValueChanged(%this)
{
	CreateWorldWindow.changeAnimalBreedingPeriodValue(CreateWorldAnimalBreedingPeriodValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldAnimalBreedingPeriodSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeAnimalBreedingPeriodValue(CreateWorldAnimalBreedingPeriodSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeAnimalBreedingPeriodValue(%this, %val)
{
	if(CreateWorldWindow.AnimalBreedingPeriod == %val || getWordCount(CreateWorldAnimalBreedingPeriodSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldAnimalBreedingPeriodSlider.range, 0);
	%max = getWord(CreateWorldAnimalBreedingPeriodSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldAnimalBreedingPeriodValue.text = %newVal;
	CreateWorldAnimalBreedingPeriodSlider.value = %newVal;
	CreateWorldWindow.AnimalBreedingPeriod = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldDayCycleValue::onValueChanged(%this)
{
	CreateWorldWindow.changeDayCycleValue(CreateWorldDayCycleValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldDayCycleSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeDayCycleValue(CreateWorldDayCycleSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeDayCycleValue(%this, %val)
{
	if(CreateWorldWindow.DayCycle == %val || getWordCount(CreateWorldDayCycleSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldDayCycleSlider.range, 0);
	%max = getWord(CreateWorldDayCycleSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldDayCycleValue.text = %newVal;
	CreateWorldDayCycleSlider.value = %newVal;
	CreateWorldWindow.DayCycle = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldWildAnimalsCountValue::onValueChanged(%this)
{
	CreateWorldWindow.changeWildAnimalsCountValue(CreateWorldWildAnimalsCountValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldWildAnimalsCountSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeWildAnimalsCountValue(CreateWorldWildAnimalsCountSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeWildAnimalsCountValue(%this, %val)
{
	if(CreateWorldWindow.WildAnimalsCount == %val || getWordCount(CreateWorldWildAnimalsCountSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldWildAnimalsCountSlider.range, 0);
	%max = getWord(CreateWorldWildAnimalsCountSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldWildAnimalsCountValue.text = %newVal;
	CreateWorldWildAnimalsCountSlider.value = %newVal;
	CreateWorldWindow.WildAnimalsCount = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldObjectDecayRateValue::onValueChanged(%this)
{
	CreateWorldWindow.changeObjectDecayRateValue(CreateWorldObjectDecayRateValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldObjectDecayRateSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeObjectDecayRateValue(CreateWorldObjectDecayRateSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeObjectDecayRateValue(%this, %val)
{
	if(CreateWorldWindow.ObjectDecayRate == %val || getWordCount(CreateWorldObjectDecayRateSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldObjectDecayRateSlider.range, 0);
	%max = getWord(CreateWorldObjectDecayRateSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldObjectDecayRateValue.text = %newVal;
	CreateWorldObjectDecayRateSlider.value = %newVal;
	CreateWorldWindow.ObjectDecayRate = %newVal;
	CreateWorldWindowObjectDecayHint.visible = (%newVal == %min);
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsStatsMultiplierValue::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsStatsMultiplierValue(CreateWorldSkillsStatsMultiplierValue.text);
}
//-----------------------------------------------------------------------------
function CreateWorldSkillsStatsMultiplierSlider::onValueChanged(%this)
{
	CreateWorldWindow.changeSkillsStatsMultiplierValue(CreateWorldSkillsStatsMultiplierSlider.getValue());
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::changeSkillsStatsMultiplierValue(%this, %val)
{
	if(CreateWorldWindow.SkillsStatsMultiplier == %val || getWordCount(CreateWorldSkillsStatsMultiplierSlider.range) < 2)
		return;
	
	%min = getWord(CreateWorldSkillsStatsMultiplierSlider.range, 0);
	%max = getWord(CreateWorldSkillsStatsMultiplierSlider.range, 1);
	%newVal = mClamp(%val, %min, %max);
	
	CreateWorldSkillsStatsMultiplierValue.text = %newVal;
	CreateWorldSkillsStatsMultiplierSlider.value = %newVal;
	CreateWorldWindow.SkillsStatsMultiplier = %newVal;
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::updateTextEditControlsRange(%this)
{
	CreateWorldMaximumPlayersValue.range = CreateWorldMaximumPlayersSlider.range;
	CreateWorldSkillsStatsMultiplierValue.range = CreateWorldSkillsStatsMultiplierSlider.range;
	CreateWorldSkillsCapValue1.range = CreateWorldSkillsCapSlider1.range;
	CreateWorldSkillsCapValue1.onValueChanged();
	CreateWorldSkillsCapValue2.range = CreateWorldSkillsCapSlider2.range;
	CreateWorldSkillsCapValue2.onValueChanged();
	CreateWorldSkillsCapValue3.range = CreateWorldSkillsCapSlider3.range;
	CreateWorldSkillsCapValue3.onValueChanged();
	CreateWorldTerraformingSpeedValue.range = CreateWorldTerraformingSpeedSlider.range;
	CreateWorldCraftingPeriodValue.range = CreateWorldCraftingPeriodSlider.range;
	CreateWorldAnimalBreedingPeriodValue.range = CreateWorldAnimalBreedingPeriodSlider.range;
	CreateWorldDayCycleValue.range = CreateWorldDayCycleSlider.range;
	CreateWorldWildAnimalsCountValue.range = CreateWorldWildAnimalsCountSlider.range;
	CreateWorldObjectDecayRateValue.range = CreateWorldObjectDecayRateSlider.range;
}
//-----------------------------------------------------------------------------
function CreateWorldWindow::updateControlsOnResize(%this)
{
	CreateWorldTopSplitter.extent.x = CreateWorldWindow.extent.x - 235 - 30;
	CreateWorldBottomSplitter.extent.x = CreateWorldWindow.extent.x - 18 - 28;
}
//-----------------------------------------------------------------------------
