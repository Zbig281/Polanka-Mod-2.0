//--- OBJECT WRITE BEGIN ---
//------------------------------------------------------------------------------
$GuiLoadingWindow::revolvingSpeed = 10;  //revolutions per minute
//------------------------------------------------------------------------------
function createLoadingGui()
{
	new GuiLoadingWindow(LoadingGui)
	{
		Enabled = "1";
		isContainer = "1";
		Profile = "GuiLoadingWindowProfile";
		HorizSizing = "width";
		VertSizing = "height";
		Position = "0 0";
		Extent = "100% 100%";
		MinExtent = "1024 720";
		canSave = "1";
		Visible = "1";
		currentTooltip = "0";

		// background
		new GuiControl()
		{
			position = "0 0";
			extent = "100% 100%";
			visible = "1";
			active = "0";
			canHit = "0";
			profile = "MainMenuWindowBackgroundProfile";
		};

		
		new GuiBitmapCtrl()
		{
			position = "0 0";
			extent = "10 10";
			profile = "GuiDefaultProfile";
			visible = "1";
			active = "1";
			resize = "1";
			internalName = "loadingWindowBackground";
		};

		
		new GuiContainer()
		{
			position = "0 0";
			extent = "55% 100%";
			minExtent = "10 2";
			profile = "GuiDefaultProfile";
			visible = "1";
			active = "1";
			isContainer = "1";
			docking = "right";
			internalName = "loadingInfoPanel";

			// текст о процессе загрузки
			new GuiTextCtrl(LoadingProgressTxt)
			{
				text = GetMessageIDText(1306); // Loading...
				position = "0 0";
				extent = "100% 30";
				profile = "GuiLoadingProgressTextProfile";
				canHit = "false";
				visible = "1";
				docking = "bottom";
			};

			
			new GuiTextCtrl()
			{
				text = GetMessageIDText(684); // Hint
				position = "0 0";
				extent = "100% 35";
				profile = "GuiLoadingGameHintLabelProfile";
				canHit = "false";
				visible = "0";
				internalName = "loadingProgressHintLabel";
			};

			// текст совета
			new GuiMLTextCtrl(LoadingProgressTooltip)
			{
				text = "";
				position = "0 0";
				extent = "100 10";
				profile = "GuiLoadingGameHintProfile";
				canHit = "false";
				visible = "0";
				lineSpacing = "0";
				bottomOffset = "0";
			};

			
			new GuiRevolvingElement()
			{
				position = "0 0";
				extent = "300 300";
				minExtent = "300 300";
				profile = "GuiDefaultProfile";
				visible = "0";
				active = "1";
				background = "art/gui/loading/sign.png";
				revolving = "art/gui/loading/sun.png";
				revolvingSpeed = $GuiLoadingWindow::revolvingSpeed;
				internalName = "loadingRevolvingElement";
				
			};
		};
	};
}
//------------------------------------------------------------------------------
function deleteLoadingGui()
{
	deleteLoadingGuiProfiles();

	if (isObject(LoadingGui))
		LoadingGui.safeDeleteObject();
}
//------------------------------------------------------------------------------
/*
function createLoadingGuiProfiles()
{
}
//------------------------------------------------------------------------------
function deleteLoadingGuiProfiles()
{
}
*/
//------------------------------------------------------------------------------
function LoadingGui::onWake(%this)
{
   if($cmFreelookMode)
      setCmFreelookMode(false, true);
	updateLoadingTextProgress();
	changeTooltipText();
}
//------------------------------------------------------------------------------
function LoadingGui::onSleep(%this)
{
	//LoadingProgress.setValue( 0 );
	setLoadingGuiText(GetMessageIDText(1386));
	LoadingProgressTooltip.setValue("");

	
}
//------------------------------------------------------------------------------
function LoadingGui::updateControlsOnResize(%this)
{
	%backgroundPos = LoadingGui-->loadingWindowBackground.position;
	%backgroundSize = LoadingGui-->loadingWindowBackground.extent;
	%loadingGuiSize = LoadingGui.extent;

	LoadingGui-->loadingInfoPanel.extent.x = %loadingGuiSize.x / 2 - 40;
	LoadingProgressTxt.position.y = %backgroundPos.y + 240;
	LoadingGui-->loadingProgressHintLabel.position.y = %backgroundPos.y + 312;
	LoadingProgressTooltip.position.y = %backgroundPos.y + 357;
	LoadingProgressTooltip.extent.x = getMin(LoadingGui-->loadingInfoPanel.extent.x, %backgroundSize.x / 2) / 100 * 90;
	LoadingGui-->loadingRevolvingElement.position.y = %backgroundPos.y + 465;
	LoadingGui-->loadingRevolvingElement.position.x = getMin(LoadingGui-->loadingInfoPanel.extent.x - LoadingGui-->loadingRevolvingElement.extent.x, 358);
}
//------------------------------------------------------------------------------
function changeTooltipText()
{
	if(!isObject(LoadingGui) || !LoadingGui.isAwake())
		return;

	%tooltip = getRandom(950, 989);

	if (%tooltip == LoadingGui.currentTooltip)
		%tooltip++;

	if (%tooltip > 989)
		%tooltip = 950;

	LoadingProgressTooltip.setValue(GetMessageIDText(%tooltip));
	LoadingGui.currentTooltip = %tooltip;

	schedule(10000, 0, changeTooltipText);
}
//------------------------------------------------------------------------------
function loadLoadingGui(%text)
{
	if(%text $= "")
		%text = GetMessageIDText(1340); //Waiting for Server

	if (!isObject(LoadingGui))
		createLoadingGui();

	setLoadingGuiText(%text);

	if(isObject(LoadingGui) && LoadingGui.isAwake())
	{
		Canvas.repaint();
		return;
	}

	
	%bitmapId = getRandom(0, 5);
	LoadingGui.setBackground("art/gui/loading/background" @ %bitmapId);

	Canvas.setContent("LoadingGui");
	Canvas.repaint();
}
//------------------------------------------------------------------------------
function updateLoadingTextProgress()
{
	if(!isObject(LoadingGui) || !LoadingGui.isAwake())
		return;

	%text = LoadingProgressTxt.getValue();
	%i = (strlen(%text) - 1); // index within string
	%dotCount = 0;

	while(%i >= 0 && getSubStr(%text, %i, 1) $= ".")
	{
		%dotCount++;
		%i--;
	}

	%maxDotCount = 3;
	%newDotCount = (%dotCount + 1);
	if(%newDotCount > %maxDotCount)
		%newDotCount = 1;

	%newText = getSubStr(%text, 0, getMax(%i + 1, 0)) @ strrepeat(".", %newDotCount);
	LoadingProgressTxt.setValue(%newText);

	schedule(1000, 0, updateLoadingTextProgress); // repeat every second
}
//------------------------------------------------------------------------------
function setLoadingGuiText(%text)
{
	if(isObject(LoadingGui))
		LoadingProgressTxt.setValue(%text);
}
//------------------------------------------------------------------------------

//--- OBJECT WRITE END ---
