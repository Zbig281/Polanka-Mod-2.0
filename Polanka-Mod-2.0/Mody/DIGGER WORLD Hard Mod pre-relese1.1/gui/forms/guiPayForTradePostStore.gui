//-----------------------------------------------------------------------------
// ◦ Craftsman & Marksman: Life is feudal ◦ 
//-----------------------------------------------------------------------------
function createPayForStoreDialog()
{
	%contentDlg = new GuiControl(PayForStoreContent) 
	{
		position = "0 0";
		extent = "100% 100%";
		minExtent = "8 2";
		horizSizing = "center";
		vertSizing = "center";
		profile = "GuiDefaultProfile";
		visible = "1";
		active = "1";
		isContainer = "1";
		canSave = "1";
		canSaveDynamicFields = "1";
		allCount = "0";

		new GuiWindowCtrl(PayForStoreContentDialog) 
		{
			position = "296 274";
			extent = "751 272";
			minExtent = "8 2";
			horizSizing = "center";
			vertSizing = "center";
			profile = "GuiCursorEscWindowProfile";
			visible = "1";
			active = "1";
			isContainer = "1";
			canSave = "1";
			canSaveDynamicFields = "1";
			resizeWidth = "0";
			resizeHeight = "0";
			canMove = "1";
			canClose = "1";
			canMinimize = "0";
			canMaximize = "0";
			canCollapse = "0";
			text = "";
			closeCommand ="PayForStoreContent.btnCancel();";

			// client area
			new GuiContainer()
			{
				docking = Client;
				position = "0 0";
				extent = "500 100";
				canSaveDynamicFields = "0";
				enabled = "1";
				profile = "TradePostWindowStoreCapacityInfoAreaProfile";
				canSave = "1";
				visible = "1";
				canHit = "true";

				// split item name and icon
				new GuiContainer()
				{
					docking = "Left";
					position = "0 0";
					extent = "300 100";
					profile = "GuiBaseTextProfile";
					visible = "1";
					active = "1";
					enabled = "1";

					new GuiBitmapCtrl(PayForStoreCoinTypeImage) 
					{
						position = "118 28";
						extent = "64 64";
						minExtent = "8 2";
						profile = "GuiBaseTextProfile";
						visible = "1";
						active = "1";
						bitmap = "";
						centered = "1";
					};

					new GuiPopUpMenuCtrlEx(PayForStoreCoinTypeSelector)
					{
						position = "10 120";
						extent = "280 52";
						Profile = "CreateCharWindowPopUpProfile";
						backPnlProfile = "GuiPopUpBorder";
						buttonOffset = 8;
						cellHeight = 46;
						createScrollCommand = "createPayForStorePopUpScroll();";
						maxPopupHeight = 235;
						addedPopupWidth = -10;
						addScrollSize = "0 0";
						horizSizing = "right";
						vertSizing = "bottom";
						menuOffset = -7;
						internalName = "coinTypeSelector";
					};
				};

				new GuiContainer()
				{
					docking = "Client";
					position = "300 1";
					extent = "1 1";
					profile = "TradePostWindowWorkAreaProfile";
					visible = "1";
					active = "1";
					BackgroundIndex = "LearningWindowBackground";

					new GuiContainer()
					{
						docking = "Client";
						position = "0 0";
						extent = "1 1";
						profile = "TradePostWindowInfoAreaProfile";
						visible = "1";
						active = "1";
						LeftIndex0 = "FringeLeftShadow";
					};

					// slider and text edits
					new GuiControl()
					{
						position = "20 47";
						extent = "397 36";
						profile = "GuiBaseTextProfile";
						visible = "1";
						active = "1";
						isContainer = "1";

						// left count
						new GuiControl()
						{
							position = "0 0";
							extent = "80 36";
							profile = "GuiAtlas3TiledImageProfile";
							visible = "1";
							active = "1";
							isContainer = "1";

							leftIndex0 = "SmallHexagonalTextFieldLeft";
							backgroundIndex = "SmallHexagonalTextFieldCenter";
							rightIndex0 = "SmallHexagonalTextFieldRight";

							new GuiTextEditSliderCtrl(payForStoreLeftValue)
							{
								format = "%d";
								renderArrow = "false";
								increment = "1";
								focusOnMouseWheel = "0";
								historySize = "0";
								tabComplete = "0";
								sinkAllKeyEvents = "0";
								text = "0";
								maxLength = "1024";
								position = "0 0";
								extent = "80 36";
								horizSizing = "right";
								vertSizing = "bottom";
								profile = "NumericTextEditSliderProfile";
								visible = "1";
								active = "1";
							};
						};

						// slider
						new CmGuiArrowSliderCtrl(payForStoreSlider)
						{
							ticks = "0";
							snap = "0";
							value = "0";
							position = "90 2";
							extent = "217 36";
							profile = "GuiHorizSliderProfile";
							active = "1";
							range = %slider_range;
							useMouseWheel = "0";
							trackVOffset = "8";
							thumbOffset = "0 0";
						};

						// right count
						new GuiControl()
						{
							position = "317 0";
							extent = "80 36";
							profile = "GuiAtlas3TiledImageProfile";
							visible = "1";
							active = "1";
							isContainer = "1";

							leftIndex0 = "SmallHexagonalTextFieldLeft";
							backgroundIndex = "SmallHexagonalTextFieldCenter";
							rightIndex0 = "SmallHexagonalTextFieldRight";

							new GuiTextEditSliderCtrl(payForStoreRightValue)
							{
								format = "%d";
								renderArrow = "false";
								increment = "1";
								focusOnMouseWheel = "0";
								historySize = "0";
								tabComplete = "0";
								sinkAllKeyEvents = "0";
								text = "0";
								maxLength = "1024";
								position = "0 0";
								extent = "80 36";
								horizSizing = "right";
								vertSizing = "bottom";
								profile = "NumericTextEditSliderProfile";
								visible = "1";
								active = "1";
							};
						};
					};

					// button Cancel
					new guiHorzTilingButtonCtrl()
					{
						text = GetMessageIDText(1113); // Cancel
						groupNum = "-1";
						buttonType = "PushButton";
						useMouseEvents = "0";
						position = "117 127";
						extent = "140 40";
						minExtent = "8 2";
						profile = "CreateCharButtonProfile";
						visible = "1";
						active = "1";
						imageIndex = "H44Btn";
						command = "PayForStoreContent.btnCancel();";
					};

					// button Ok
					new guiHorzTilingButtonCtrl()
					{
						text = GetMessageIDText(1218); // Ok
						groupNum = "-1";
						buttonType = "PushButton";
						useMouseEvents = "0";
						minExtent = "8 2";
						profile = "CreateCharButtonProfile";
						visible = "1";
						active = "1";
						position = "277 127";
						extent = "140 40";
						imageIndex = "H44Btn";
						command = "PayForStoreContent.btnOk();";
					};
				};
			};
		};
	};
}
//-----------------------------------------------------------------------------
// PayForStoreContent
//-----------------------------------------------------------------------------
function PayForStoreContent::init(%this)
{
	PayForStoreCoinTypeSelector.setFirstSelected();
}
//-----------------------------------------------------------------------------
function PayForStoreContent::btnOk(%this)
{
	changeStoreCoins(PayForStoreCoinTypeSelector.getSelected(), payForStoreLeftValue.getText(), payForStoreRightValue.getText());
	Canvas.popDialog(PayForStoreContent);
	PayForStoreContent.safeDeleteObject();
}
//-----------------------------------------------------------------------------
function PayForStoreContent::btnCancel(%this)
{
	Canvas.popDialog(PayForStoreContent);
	PayForStoreContent.safeDeleteObject();
}
//-----------------------------------------------------------------------------
function payForStoreLeftValue::onValueChanged(%this)
{
	PayForStoreContent.onLeftValueChanged();
}
//-----------------------------------------------------------------------------
function payForStoreRightValue::onValueChanged(%this)
{
	PayForStoreContent.onRightValueChanged();
}
//-----------------------------------------------------------------------------
function payForStoreSlider::onValueChanged(%this)
{
	PayForStoreContent.onSliderValueChanged();
}
//-----------------------------------------------------------------------------
function PayForStoreContent::onLeftValueChanged(%this)
{
	if (payForStoreRightValue.text == PayForStoreContent.allCount - getTrailingNumber(payForStoreLeftValue.text))
		return;

	payForStoreRightValue.text = PayForStoreContent.allCount - getTrailingNumber(payForStoreLeftValue.text);
	payForStoreSlider.value = getTrailingNumber(payForStoreRightValue.text);
}
//-----------------------------------------------------------------------------
function PayForStoreContent::onRightValueChanged(%this)
{

	if (payForStoreLeftValue.text == PayForStoreContent.allCount - getTrailingNumber(payForStoreRightValue.text))
		return;

	payForStoreLeftValue.text = PayForStoreContent.allCount - getTrailingNumber(payForStoreRightValue.text);
	payForStoreSlider.value = getTrailingNumber(payForStoreRightValue.text);
}
//-----------------------------------------------------------------------------
function PayForStoreContent::onSliderValueChanged(%this)
{
	if (payForStoreRightValue.text == payForStoreSlider.getValue())
		return;

	payForStoreRightValue.text = payForStoreSlider.getValue();
}
//-----------------------------------------------------------------------------
function PayForStoreCoinTypeSelector::onSelect(%this, %id, %text)
{
	PayForStoreCoinTypeImage.bitmap = TradePostWindow.getFaceImageForSelectedCoinType(%id);
	%coinsCount = TradePostWindow.getCoinsCountForSelectedCoinType(%id);

	// hack for update slider position
	payForStoreSlider.range = "0 100";
	payForStoreSlider.value = "100";

	// new count
	$allCount = %coinsCount.x + %coinsCount.y;
	PayForStoreContent.allCount = $allCount;
	payForStoreLeftValue.range = "0 " @ $allCount;
	payForStoreRightValue.range = "0 " @ $allCount;
	payForStoreSlider.range = "0 " @ $allCount;

	payForStoreSlider.value = getTrailingNumber(%coinsCount.y);

	payForStoreLeftValue.text = %coinsCount.x;
	payForStoreRightValue.text = %coinsCount.y;
}
//-----------------------------------------------------------------------------
function addInfoToSplitSupportCoinsDialog(%coinTypeName, %coinTypeId)
{
	if (isObject(PayForStoreCoinTypeSelector))
	{
		PayForStoreCoinTypeSelector.add(%coinTypeName, %coinTypeId);
	}
}
//-----------------------------------------------------------------------------
function showSplitSupportCoinsDialog()
{
	if (isObject(PayForStoreContent))
	{
		Canvas.pushDialog(PayForStoreContent);
		PayForStoreCoinTypeSelector.setFirstSelected();
	}
}
//-----------------------------------------------------------------------------
function createPayForStorePopUpScroll()
{
	%gui = new GuiScrollCtrl()
	{
		hScrollBar = "alwaysOff";
		vScrollBar = "dynamic";
		horizSizing = "width";
		vertSizing = "height";
		profile = "GuiPopUpScrollBarProfile";
		constantThumbHeight = false;
		childMargin = "10 0";
		trackOffset = 11;
		lockHorizScroll = true;
		arrowSadowSize = 2;
		addContentWidth = 0; //-60;
	};
	return %gui;
}
//-----------------------------------------------------------------------------
